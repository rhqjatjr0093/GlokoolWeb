[{"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/index.js":"1","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Root.js":"2","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/reportWebVitals.js":"3","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/configureStore.js":"4","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/App.js":"5","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Firebase.js":"6","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/index.js":"7","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/index.js":"8","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/base.js":"9","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Main.js":"10","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Auth.js":"11","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Main.js":"12","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Email.js":"13","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Auth.js":"14","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Home.js":"15","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/LoginHeaderContainer.js":"16","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/HeaderContainer.js":"17","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Chat.js":"18","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Setting.js":"19","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/index.js":"20","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Chat/index.js":"21","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/index.js":"22","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/index.js":"23","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailFail.js":"24","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailVefication.js":"25","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthText.js":"26","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthError.js":"27","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/index.js":"28","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthGender.js":"29","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/index.js":"30","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthDate.js":"31","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthButton.js":"32","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/InputWithLabel.js":"33","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthContent.js":"34","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthWrapper.js":"35","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Chat/ChatRoom.js":"36","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Email.js":"37","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Login.js":"38","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Register.js":"39","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SettingButton.js":"40","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LogoutButton.js":"41","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SignUpButton.js":"42","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LoginButton.js":"43","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/lib/styleUtil.js":"44","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingText.js":"45","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingError.js":"46","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingGender.js":"47","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingDate.js":"48","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingButton.js":"49","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/InputWithLabel.js":"50","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingContent.js":"51","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingWrapper.js":"52","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/Header.js":"53"},{"size":337,"mtime":1613377701827,"results":"54","hashOfConfig":"55"},{"size":382,"mtime":1613377701819,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1613377701829,"results":"57","hashOfConfig":"55"},{"size":632,"mtime":1613377701828,"results":"58","hashOfConfig":"55"},{"size":2121,"mtime":1613377701819,"results":"59","hashOfConfig":"55"},{"size":894,"mtime":1613401603710,"results":"60","hashOfConfig":"55"},{"size":261,"mtime":1613377701829,"results":"61","hashOfConfig":"55"},{"size":167,"mtime":1613377701828,"results":"62","hashOfConfig":"55"},{"size":821,"mtime":1613377701829,"results":"63","hashOfConfig":"55"},{"size":1228,"mtime":1613377701828,"results":"64","hashOfConfig":"55"},{"size":1364,"mtime":1613377701828,"results":"65","hashOfConfig":"55"},{"size":909,"mtime":1613445117886,"results":"66","hashOfConfig":"55"},{"size":1069,"mtime":1613377701827,"results":"67","hashOfConfig":"55"},{"size":1109,"mtime":1613377701827,"results":"68","hashOfConfig":"55"},{"size":909,"mtime":1613378810561,"results":"69","hashOfConfig":"55"},{"size":524,"mtime":1613377701823,"results":"70","hashOfConfig":"55"},{"size":580,"mtime":1613377701823,"results":"71","hashOfConfig":"55"},{"size":13210,"mtime":1613446058163,"results":"72","hashOfConfig":"55"},{"size":7431,"mtime":1613469532568,"results":"73","hashOfConfig":"55"},{"size":137,"mtime":1613377701826,"results":"74","hashOfConfig":"55"},{"size":54,"mtime":1613377701823,"results":"75","hashOfConfig":"55"},{"size":433,"mtime":1613377701822,"results":"76","hashOfConfig":"55"},{"size":115,"mtime":1613377701826,"results":"77","hashOfConfig":"55"},{"size":1208,"mtime":1613377701826,"results":"78","hashOfConfig":"55"},{"size":2193,"mtime":1613377701826,"results":"79","hashOfConfig":"55"},{"size":583,"mtime":1613377701821,"results":"80","hashOfConfig":"55"},{"size":462,"mtime":1613377701821,"results":"81","hashOfConfig":"55"},{"size":267,"mtime":1613377701823,"results":"82","hashOfConfig":"55"},{"size":903,"mtime":1613377701821,"results":"83","hashOfConfig":"55"},{"size":475,"mtime":1613377701825,"results":"84","hashOfConfig":"55"},{"size":1095,"mtime":1613377701821,"results":"85","hashOfConfig":"55"},{"size":688,"mtime":1613377701821,"results":"86","hashOfConfig":"55"},{"size":859,"mtime":1613377701822,"results":"87","hashOfConfig":"55"},{"size":332,"mtime":1613377701821,"results":"88","hashOfConfig":"55"},{"size":1151,"mtime":1613377701822,"results":"89","hashOfConfig":"55"},{"size":1815,"mtime":1613377701823,"results":"90","hashOfConfig":"55"},{"size":2121,"mtime":1613377701825,"results":"91","hashOfConfig":"55"},{"size":3726,"mtime":1613377701825,"results":"92","hashOfConfig":"55"},{"size":6901,"mtime":1613439074536,"results":"93","hashOfConfig":"55"},{"size":842,"mtime":1613377701822,"results":"94","hashOfConfig":"55"},{"size":907,"mtime":1613377701822,"results":"95","hashOfConfig":"55"},{"size":802,"mtime":1613377701823,"results":"96","hashOfConfig":"55"},{"size":780,"mtime":1613377701822,"results":"97","hashOfConfig":"55"},{"size":1274,"mtime":1613377701827,"results":"98","hashOfConfig":"55"},{"size":589,"mtime":1613377701825,"results":"99","hashOfConfig":"55"},{"size":468,"mtime":1613377701825,"results":"100","hashOfConfig":"55"},{"size":909,"mtime":1613377701825,"results":"101","hashOfConfig":"55"},{"size":1101,"mtime":1613377701824,"results":"102","hashOfConfig":"55"},{"size":694,"mtime":1613377701824,"results":"103","hashOfConfig":"55"},{"size":859,"mtime":1613377701824,"results":"104","hashOfConfig":"55"},{"size":338,"mtime":1613377701824,"results":"105","hashOfConfig":"55"},{"size":1056,"mtime":1613440499768,"results":"106","hashOfConfig":"55"},{"size":1493,"mtime":1613377701822,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1m44al4",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/index.js",[],["229","230"],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Root.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/reportWebVitals.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/configureStore.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/App.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Firebase.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/base.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Main.js",["231","232"],"import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport { auth, firestore } from '../../Firebase';\n\nconst CHANGE_INPUT = 'main/CHANGE_INPUT'; // input 값 변경\nconst INITIALIZE_FORM = 'main/INITIALIZE_FORM'; // form 초기화\n\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \n\nconst SET_ERROR = 'main/SET_ERROR'; // 오류 설정\n\nconst initialState = Map({\n    chatRoom: Map([]),\n    setting: Map({\n        name : '',\n        email : '',\n        gender : '',\n        signupDate : new Date(),  //가입한 날짜\n        birthDate : new Date()\n    })\n});\n\nexport default handleActions({\n    [CHANGE_INPUT]: (state, action) => {\n        const { form, name, value } = action.payload;\n        return state.setIn([form, 'form', name], value);\n    },\n    [INITIALIZE_FORM]: (state, action) => {\n        const initialForm = initialState.get(action.payload);\n        return state.set(action.payload, initialForm);\n    },\n    [SET_ERROR]: (state, action) => {\n        const { form, message } = action.payload;\n        return state.setIn([form, 'error'], message);\n    }\n}, initialState);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Auth.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Main.js",["233","234"],"import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as baseActions from \"../redux/modules/base\";\nimport LoginHeaderContainer from \"../components/Base/LoginHeaderContainer\";\nimport Chat from \"../containers/Main/Chat\";\nimport Setting from \"../containers/Main/Setting\";\nimport { AuthWrapper } from \"../components/Auth\";\nimport { ChatRoomLeft } from \"../components/Chat\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className={{ display: \"flex\" }}>\n        <LoginHeaderContainer />\n        <Route exact path=\"/main\" component={Chat} />\n        <Route exact path=\"/main/setting\" component={Setting} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({}),\n  (dispatch) => ({\n    BaseActions: bindActionCreators(baseActions, dispatch),\n  })\n)(Main);\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Email.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Auth.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Home.js",["235"],"import React, { Component } from \"react\";\nimport { auth } from \"../Firebase\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport HeaderContainer from \"../components/Base/HeaderContainer\";\nimport * as baseActions from \"../redux/modules/base\";\n\nclass Home extends Component {\n  componentDidMount() {\n    const user = auth().currentUser;\n    //첫 로딩후에만 실행되는 코드\n    //이메일 전송 및 확인 (오류 발생시 최대 5번 재시도)\n    if (user != null) {\n      this.props.history.push(\"/main\");\n    } else {\n      console.log(user);\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <HeaderContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({}),\n  (dispatch) => ({\n    BaseActions: bindActionCreators(baseActions, dispatch),\n  })\n)(Home);\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/LoginHeaderContainer.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/HeaderContainer.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Chat.js",["236","237","238","239","240","241","242","243","244"],"import React, { useCallback, useRef } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport { useHistory } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Avatar, ListItemAvatar, Toolbar } from '@material-ui/core';\nimport { GiftedChat, Composer, Bubble, Send } from 'react-native-gifted-chat';\nimport { database, auth, storage } from '../../Firebase'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport { IconButton } from \"@material-ui/core\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ImageUploader from 'react-images-upload';\nimport Modal from '@material-ui/core/Modal';\nimport {Recorder} from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst Chat = () => {\n  const chatRoom = [1,2,3,4,5];\n  const classes = useStyles();\n  const [chatMessages, setChatMessages] = React.useState([]);  \n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [audioModalOpen, setAudioModalOpen] = React.useState(false);\n  const [audioDetails, setAudioDetails] = React.useState(\n    {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0,\n      }\n    }\n  )\n\n  const ChatDB = database().ref('/chats/test');\n  const user = auth().currentUser;\n  const history = useHistory();\n\n\n  //메시지 아이디 생성기 (출처: https://github.com/liplylie/ReactNativeChatImageAudio/blob/master/src/components/chat.js)\n  //메시지 구분을 위한 임시 조치 (시간, uid를 넣어서 만들면 될 듯)\n  const messageIdGenerator = () => {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n        let r = (Math.random() * 16) | 0,\n            v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n  }\n\n\n  //componentwillmount 대신 사용\n  //페이지 최초 로딩시 채팅 메시지 로딩\n  React.useEffect(() => {    \n    if(user.emailVerified == false){\n      history.push('/email/fail')\n    }\n\n    ChatDB.on('value', snapshot => {\n        if (!snapshot.val()) {\n            return;\n        }\n        let { messages } = snapshot.val();\n        messages = messages.map(node => {\n            const message = {};\n            message._id = node._id;\n            message.text = node.messageType === \"message\" ? node.text : \"\";\n            message.createdAt = node.createdAt;\n            message.user = {\n                _id: node.user._id,\n                // 바꿔야 됌\n            };\n            message.image = node.messageType === \"image\" ? node.image : \"\";\n            message.audio = node.messageType === \"audio\" ? node.audio : \"\";\n            message.messageType = node.messageType;\n            return message;\n        });\n        setChatMessages([...messages])\n    });;\n    \n    \n    return () => {\n        setChatMessages([]);\n    };\n  }, [])\n\n\n  // 이미지 업로드 기능 관련 구현\n  const clickImageSend = () => {\n    setModalOpen(true)\n    handleMenuClose();\n  };\n\n  const handleCloseImage = () => {\n    setModalOpen(false);\n  }\n\n  const onDrop = (pic, url) => {\n\n    const MessageID = messageIdGenerator();    \n    let type = pic[0].type.split('/') //[1] 에 확장자 들어있음\n    \n    const picRef = storage().ref().child(`xxxxx/picture/${MessageID}.${type[1]}`).put(pic[0]);\n    picRef.on(storage.TaskEvent.STATE_CHANGED,\n      function(snapshot) {\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + MessageID, '.' + (type[1]) + progress + '% done');\n          switch (snapshot.state) {\n          case storage.TaskState.PAUSED:\n              console.log('Upload is paused');\n              break;\n          case storage.TaskState.RUNNING:\n              console.log('Upload is running');\n              break;\n          }\n      }, function(error) {\n          switch (error.code) {\n              case 'storage/unauthorized':\n              break;\n          \n              case 'storage/canceled':\n              break;\n\n              case 'storage/unknown':\n              break;\n      }\n      }, function() {\n          picRef.snapshot.ref.getDownloadURL().then(async function(downloadURL) {\n              //업로드 완료\n              const message = {\n                  _id : MessageID,\n                  createdAt : new Date().getTime(),\n                  user: {\n                      _id: user?.uid\n                  },\n                  image : downloadURL,  //다운로드URL 전달\n                  messageType : 'image'\n              };\n\n              await ChatDB.update({messages: [message, ...chatMessages]});\n          });\n      \n    })\n    handleCloseImage();\n  };\n\n  // 오디오 업로드 기능 관련 구현\n  \n  const audioReset = () => {\n    setAudioDetails({\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0,\n      }\n    })\n  }\n\n  const audioStop = (data) => {\n    setAudioDetails(data);\n    console.log(audioDetails);\n  }\n\n  const audioUpload = async(file) => {   \n    const MessageID = messageIdGenerator();\n    const reference = storage().ref();\n    const voiceRef = reference.child(`xxxxx/voice/${MessageID}`);\n    \n    voiceRef.put(file)\n      .then(async(response) => {        \n        await storage().ref(`xxxxx/voice/${MessageID}`).getDownloadURL()\n          .then(result => {\n            const message = {\n              _id : MessageID,\n              createdAt : new Date().getTime(),\n              user: {\n                  _id: `${user?.uid}`,\n                  name: user?.displayName,\n                  avatar: user?.photoURL\n              },\n              audio : result,  //파일 경로만 전달\n              messageType : 'audio'\n            };\n            ChatDB.update({messages: [message, ...chatMessages]});\n            setAudioModalOpen(false);\n          })        \n    })   \n  }\n\n  const handleAudioModal = () => {\n    setAudioModalOpen(true)\n    handleMenuClose();\n  }\n\n  const handleCloseAudio = () => {\n    setAudioModalOpen(false)\n    audioReset();\n  }\n\n  const getUrl = async(props) => {\n    const url = await storage().ref(props.currentMessage.audio).getDownloadURL()\n    \n    console.log(url);\n    \n    return url;\n  }\n\n  const renderAudio = (props) => {\n    return (\n      <div className={classes.player}><audio src={props.currentMessage.audio} controls/></div>\n    )\n  }\n\n  // 오버플로우 메뉴 구현\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const renderLoading = () => {\n    return (<div>Loading...</div>)\n  }\n\n  const onSend = async(messages = []) => {\n      messages[0].messageType = \"message\";\n      messages[0].createdAt = new Date().getTime();\n\n      await ChatDB.update({messages: [messages[0], ...chatMessages]});\n  }        \n\n  const renderBubble = (props) => {\n    return(\n        <Bubble \n            {...props}\n            wrapperStyle={{\n                left:{\n                    backgroundColor: '#F5F5F5',\n                    fontColor: 'black',\n                    fontWeight: 'bold'\n                },\n                right: {\n                    backgroundColor: '#FFC043',\n                    fontWeight: 'bold'\n                }\n            }}\n        />\n\n    );\n  }\n\n  const renderComposer = (props) => {\n    return(\n       <Composer\n            {...props}\n            textInputProps={{\n              ...props.textInputProps,\n              autoFocus: true,\n              blurOnSubmit: true,\n              onSubmitEditing: (() => { //Enter 키를 입력시 Send 할 수 있도록\n                      if (props.text && props.onSend) {\n                        props.onSend({text: props.text.trim()}, true);\n                      }\n              })              \n            }}\n            textInputStyle={{justifyContent: 'center'}}\n       />\n    );\n  }\n\n  const renderActions = (props) => {\n    return(\n      \n      <div>\n        <IconButton onClick={handleMenuClick}>\n          <FontAwesomeIcon icon={faBars} style={{color: '#FFC043'}} size={32}/>   \n        </IconButton>\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n          <MenuItem onClick={clickImageSend}>이미지</MenuItem>\n          <MenuItem onClick={handleAudioModal}>음성</MenuItem>\n        </Menu>   \n      </div>\n    );\n  };\n\n  const renderSend = (props) => {\n    return(\n      <Send {...props} containerStyle={{justifyContent: 'center', \n            alignItems: 'center',\n            borderWidth: 0,\n            marginLeft: 15,\n            marginRight: 5,\n            marginBottom: 1,\n            width: 60}}>\n        <FontAwesomeIcon icon={faPaperPlane} style={{color: '#FFC043'}} size={60}/>\n      </Send>\n    );        \n  }\n\n\n\n  return (\n    <div>\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar/>\n            <div className={classes.drawerContainer}>\n            \n            <List \n              button            \n              selected\n            >\n              {chatRoom.map((key) => (\n                <ListItem key={key} button selected={selectedIndex === key} onClick={() => setSelectedIndex(key)}>                      \n                  <ListItemAvatar>\n                    <Avatar src='../../assets/profile.jpg'/>\n                  </ListItemAvatar>\n                  <ListItemText primary='장충단 길' secondary='고객명'/>\n                </ListItem>\n              ))}\n            </List>\n            </div>            \n        </Drawer>\n\n        <div className={classes.chat}>\n          <Toolbar/>\n          <GiftedChat\n            user={{\n              _id: `${user?.uid}`,\n              name: user.displayName\n            }}\n            infiniteScroll={true}\n            createdAt={new Date().getTime()}\n            textInputProps={{autoFocus: true}}\n            messages={chatMessages}\n            alwaysShowSend={true}\n            renderUsernameOnMessage={true}\n            onSend={messages => onSend(messages)}\n            renderActions={renderActions}\n            renderSend={renderSend}\n            renderLoading={renderLoading}\n            renderBubble={renderBubble}\n            renderMessageAudio={renderAudio}\n            renderComposer={renderComposer}\n            renderAvatar={null}\n          />\n\n        <Modal\n          open={modalOpen}\n          onClose={handleCloseImage}\n          aria-labelledby=\"Image Modal\"\n          aria-describedby=\"이미지 업로드를 위한 Modal 창\"\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <ImageUploader\n              withIcon={true}\n              buttonText='이미지를 선택하세요'\n              onChange={onDrop}\n              singleImage={true}\n              imgExtension={['.jpg', '.gif', '.png', '.gif']}\n              maxFileSize={5242880}\n            />\n          </div>\n        </Modal>\n        <Modal\n          open={audioModalOpen}\n          onClose={handleCloseAudio}\n          aria-labelledby=\"Audio Modal\"\n          aria-describedby=\"오디오 메시지 전송을 위한 Modal\"\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <Recorder\n              record={true}\n              title={\"녹음기\"}\n              audioURL={audioDetails.url}\n              showUIAudio\n              handleAudioStop={data => audioStop(data)}\n              handleAudioUpload={data => audioUpload(data)}\n              handleRest={() => audioReset()}\n            />\n          </div>\n        </Modal>\n        </div>        \n      </div>\n  );\n  \n}\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    position: 'relative',\n    width: 300,\n    flexShrink: 0,\n    zIndex: 0,\n  },\n  drawerPaper: {\n    width: 300,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  avatar: {\n    width: 52,\n    height: 52,\n    borderRadius: 100,\n  },\n  chat: {\n    position: 'fixed',\n    bottom: 0,\n    left: 300,\n    right: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    borderColor: 'gray'\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n  },\n  player: {\n    padding: 5\n  }\n\n}));\n\nexport default Chat;","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Setting.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Chat/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailFail.js",["263"],"import React, { Component } from 'react';\nimport { AuthContent, AuthButton, AuthText } from '../../components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { auth } from '../../Firebase';\nimport * as authActions from '../../redux/modules/Auth';\n\nconst user = auth().currentUser;\n\nclass EmailFail extends Component {\n    \n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.props.history.push('/email/verification');\n    }\n\n    handleClick2 = () => {\n        auth().signOut();\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <AuthContent title=\"이메일 인증 실패\">\n                <AuthText context='이메일 인증이 완료되지 않았습니다'/>\n                <AuthText context='링크를 클릭해주세요'/>\n                <AuthButton onClick={this.handleClick}>이메일 재 전송</AuthButton>\n                <AuthButton onClick={this.handleClick2}>메인으로</AuthButton>\n            </AuthContent>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n    }),\n    (dispatch) => ({\n        AuthActions: bindActionCreators(authActions, dispatch)\n    })\n)(EmailFail);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailVefication.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthText.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthError.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthGender.js",["264"],"import React from 'react';\nimport styled from 'styled-components';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    box-sizing : border-box;\n    border: 1px solid #707070;\n    outline: none;\n    border-radius: 0px;\n    line-height: 2.5rem;\n    font-size: 1.2rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n`;\n\n\nconst AuthGender = ({label, ...rest}) => (\n    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Select {...rest} style={{fontSize: '1.2rem'}}>\n          <MenuItem value={'Male'}>Male</MenuItem>\n          <MenuItem value={'Female'}>Female</MenuItem>\n        </Select>\n    </Wrapper>\n\n    \n);\n\nexport default AuthGender;\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthDate.js",["265","266"],"import React from 'react';\nimport '../Date/react-datetime.css';\nimport Datetime from \"react-datetime\";\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst renderInput = ((props) => {\n    function clear() {\n      props.onChange({ target: { name: 'birthDate', value: '' } });\n    }\n    return (\n      <div>\n        <input {...props} style={{\n            width: '50%',\n            fontSize: '1.2rem',\n            boxSizing: 'border-box',\n            paddingTop: '0.5rem',\n            paddingBottom: '0.5rem',\n            paddingLeft: '0.5rem',\n            paddingRight: '0.5rem',\n            border: '1px solid #707070',\n            outline: 'none',\n            borderRadius: '0px',\n        }}/>\n      </div>\n    );\n});\n\nconst Authdate = ({label, ...rest}) => (    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Datetime {...rest} renderInput={renderInput}/>\n    </Wrapper>    \n);\n\nexport default Authdate;\n\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/InputWithLabel.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthContent.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthWrapper.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Chat/ChatRoom.js",["267"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Avatar, ListItemAvatar, Toolbar } from '@material-ui/core';\n\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    position: 'relative',\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  avatar: {\n    width: 52,\n    height: 52,\n    borderRadius: 100,\n  },\n}));\n\n\nconst chatRoom = [1,2,3,4,5];\n\nexport default function ChatRoomLeft () {\n    const classes = useStyles();\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n    return(\n      <div>\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar/>\n            <div className={classes.drawerContainer}>\n            \n            <List \n              button            \n              selected\n            >\n              {chatRoom.map((key) => (\n                <ListItem key={key} button selected={selectedIndex === key} onClick={() => setSelectedIndex(key)}>                      \n                  <ListItemAvatar>\n                    <Avatar src='../../assets/profile.jpg'/>\n                  </ListItemAvatar>\n                  <ListItemText primary='장충단 길' secondary='고객명'/>\n                </ListItem>\n              ))}\n            </List>\n            </div>            \n        </Drawer>\n      </div>\n        \n        \n        \n    );    \n};","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Email.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Login.js",["268","269","270","271","272","273","274"],"import React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, AuthError } from '../../components/Auth';\nimport { auth } from '../../Firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../redux/modules/Auth';\n\n\nclass Login extends Component {\n\n    componentDidMount() {\n        if(auth().currentUser != null){\n            console.log(auth().currentUser);\n            this.props.history.push('/main');\n        }\n    }\n\n    setError = (message) => {\n        const { AuthActions } = this.props;\n        AuthActions.setError({\n            form: 'login',\n            message\n        });\n    }\n\n    handleChange = (e) => {\n        const { AuthActions } = this.props;\n        const { name, value } = e.target;\n\n        AuthActions.changeInput({\n            name,\n            value,\n            form: 'login'\n        });\n    }\n\n    handleLogin = () => {\n        const { form, error } = this.props;\n        const { email, password } = form.toJS();\n        \n        auth().setPersistence(auth.Auth.Persistence.LOCAL);\n\n        auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                console.log(result.user)\n                if(result.user.emailVerified == true){\n                    //this.props.history.push('/main');\n                }\n                else{\n                    //this.props.history.push('/email/fail');\n                }\n               \n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                console.log(errorCode);\n                \n                if(errorCode == 'auth/invalid-email'){\n                    this.setError('올바르지 않은 이메일 형식입니다');\n                }\n                else if (errorCode == 'auth/user-disabled'){\n                    this.setError('정지된 회원입니다');\n                }\n                else if (errorCode == 'auth/user-not-found'){\n                    this.setError('없는 회원입니다. 이메일을 확인해주세요');\n                }\n                else if (errorCode == 'auth/wrong-password'){\n                    this.setError('비밀번호가 틀렸습니다');\n                }\n                else{\n                    this.setError(errorCode);\n                }\n            })\n    }\n\n    render() {\n        const { error } = this.props;\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\n        const { handleChange, handleLogin } = this;\n\n        return (\n            <AuthContent title=\"로그인\">\n                <InputWithLabel \n                    label=\"이메일\" \n                    name=\"email\" \n                    placeholder=\"이메일\" \n                    value={email} \n                    onChange={handleChange}\n                />\n                <InputWithLabel \n                    label=\"비밀번호\" \n                    name=\"password\" \n                    placeholder=\"비밀번호\" \n                    type=\"password\" \n                    value={password} \n                    onChange={handleChange}\n                />\n                {\n                    error && <AuthError>{error}</AuthError>\n                }\n                <AuthButton onClick={() => handleLogin()}>로그인</AuthButton>\n            </AuthContent>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        form: state.auth.getIn(['login', 'form']),\n        error: state.auth.getIn(['login', 'error']),\n    }),\n    (dispatch) => ({\n        AuthActions: bindActionCreators(authActions, dispatch)\n    })\n)(Login);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Register.js",["275","276","277","278","279","280","281","282","283"],"import React, { Component } from \"react\";\nimport {\n  AuthContent,\n  InputWithLabel,\n  AuthButton,\n  AuthDate,\n  AuthGender,\n  AuthError,\n} from \"../../components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { auth, firestore } from \"../../Firebase\";\nimport * as authActions from \"../../redux/modules/Auth\";\nimport moment from \"moment\";\nimport { isEmail, isLength, isAlphanumeric, toDate } from \"validator\";\n\nconst profileDocUpdate = async (user, name, email, gender, birthDate) => {\n  var userDocument = await firestore()\n    .collection(\"Guides\")\n    .doc(user?.uid)\n    .set({\n      name: name,\n      email: email,\n      gender: gender,\n      signupDate: new Date(), //가입한 날짜\n      birthDate: birthDate,\n    })\n    .then(() => {\n      console.log(\"프로필 문서 업데이트 성공\");\n    })\n    .catch(() => {\n      console.log(\"프로필 문서 업데이트 성공\");\n    });\n};\n\nconst profileUpdate = async (user, name) => {\n  var profile = await user\n    .updateProfile({\n      displayName: name,\n      photoURL: \"\",\n    })\n    .then(() => {\n      console.log(\"프로필 업데이트 성공\");\n    })\n    .catch(() => {\n      console.log(\"프로필 업데이트 실패\");\n    });\n};\n\nclass Register extends Component {\n  componentDidMount() {\n    if (auth().currentUser != null) {\n      console.log(auth().currentUser);\n      this.props.history.push(\"/main\");\n    }\n  }\n\n  componentWillUnmount() {\n    //화면을 이동할때 실행\n    //입력값 초기화 실행\n\n    this.handleChange({ target: { name: \"email\", value: \"\" } });\n    this.handleChange({ target: { name: \"password\", value: \"\" } });\n    this.handleChange({ target: { name: \"passwordConfirm\", value: \"\" } });\n    this.handleChange({ target: { name: \"birthDate\", value: \"\" } });\n    this.handleChange({ target: { name: \"gender\", value: \"Male\" } });\n  }\n\n  setError = (message) => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: \"register\",\n      message,\n    });\n  };\n\n  validate = {\n    email: (value) => {\n      if (!isEmail(value)) {\n        this.setError(\"잘못된 이메일 형식 입니다.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    username: (value) => {\n      if (!isAlphanumeric(value) || !isLength(value, { min: 4, max: 15 })) {\n        this.setError(\n          \"닉네임은 4~15 글자의 알파벳 혹은 숫자로 이뤄져야 합니다.\"\n        );\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    password: (value) => {\n      if (!isLength(value, { min: 8 })) {\n        this.setError(\"비밀번호를 8자 이상 입력하세요.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    passwordConfirm: (value) => {\n      if (this.props.form.get(\"password\") !== value) {\n        this.setError(\"입력한 비밀번호와 일치하지 않습니다.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    birthDate: (value) => {\n      return true;\n    },\n    gender: (value) => {\n      return true;\n    },\n  };\n\n  handleChange = (e) => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: \"register\",\n    });\n\n    const validation = this.validate[name](value);\n  };\n\n  handleLocalRegister = async () => {\n    const { form, AuthActions, error, history } = this.props;\n    const {\n      email,\n      username,\n      password,\n      passwordConfirm,\n      birthDate,\n      gender,\n    } = form.toJS();\n\n    const { validate } = this;\n\n    if (error) return;\n    if (\n      !validate[\"email\"](email) ||\n      !validate[\"username\"](username) ||\n      !validate[\"password\"](password) ||\n      !validate[\"passwordConfirm\"](passwordConfirm) ||\n      !validate[\"birthDate\"](birthDate)\n    ) {\n      return;\n    }\n\n    this.setError(null);\n\n    await auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async (response) => {\n        await profileDocUpdate(\n          response.user,\n          username,\n          email,\n          gender,\n          birthDate\n        );\n        await profileUpdate(response.user, username);\n        this.props.history.push(\"/auth/email\");\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n\n        if (errorCode == \"auth/email-already-in-use\") {\n          this.setError(\"이미 사용중인 이메일입니다.\");\n        } else if (errorCode == \"auth/weak-password\") {\n          this.setError(\"비밀번호가 너무 약합니다\");\n        } else {\n          this.setError(errorCode);\n        }\n      });\n  };\n\n  render() {\n    const { error } = this.props;\n    const {\n      email,\n      username,\n      password,\n      passwordConfirm,\n      birthDate,\n      gender,\n    } = this.props.form.toJS();\n    const { handleChange, handleLocalRegister } = this;\n\n    return (\n      <AuthContent title=\"회원가입\">\n        <InputWithLabel\n          label=\"이메일\"\n          name=\"email\"\n          placeholder=\"이메일\"\n          value={email}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"닉네임\"\n          name=\"username\"\n          placeholder=\"가이드 명으로 표시됩니다\"\n          value={username}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"비밀번호\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"비밀번호 확인\"\n          name=\"passwordConfirm\"\n          placeholder=\"비밀번호 확인\"\n          type=\"password\"\n          value={passwordConfirm}\n          onChange={handleChange}\n        />\n        <AuthDate\n          label=\"생년월일\"\n          value={birthDate}\n          dateFormat=\"YYYY-MM-DD\"\n          timeFormat={false}\n          closeOnSelect={true}\n          onChange={(date) =>\n            handleChange({\n              target: { name: \"birthDate\", value: moment(date).format(\"X\") },\n            })\n          }\n        />\n        <AuthGender\n          label=\"성별\"\n          value={\"Male\"}\n          onChange={(gender) =>\n            handleChange({\n              target: { name: \"gender\", value: gender.target.value },\n            })\n          }\n        />\n        {error && <AuthError>{error}</AuthError>}\n        <AuthButton onClick={handleLocalRegister}>회원가입</AuthButton>\n      </AuthContent>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    form: state.auth.getIn([\"register\", \"form\"]),\n    error: state.auth.getIn([\"register\", \"error\"]),\n    exists: state.auth.getIn([\"register\", \"exists\"]),\n  }),\n  (dispatch) => ({\n    AuthActions: bindActionCreators(authActions, dispatch),\n  })\n)(Register);\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SettingButton.js",["284"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { shadow } from '../../../lib/styleUtil';\nimport { auth } from '../../../Firebase'\n\nconst BorderedButton = styled(Link)`\n    font-weight: 600;\n    color: #FFC043;\n    border: 1px solid #FFC043;\n    padding: 0.5rem;\n    padding-bottom: 0.4rem;\n    cursor: pointer;\n    border-radius: 2px;\n    text-decoration: none;\n    transition: .2s all;\n    \n\n    &:hover {\n        background: #FFC043;\n        color: white;\n        ${shadow(1)}\n    }\n\n    &:active {\n        /* 마우스 클릭시 아래로 미세하게 움직임 */\n        transform: translateY(3px);\n    }\n\n\n`;\n\nconst SettingButton = () => (\n    \n    <BorderedButton to=\"/main/setting\">\n        개인정보 수정\n    </BorderedButton>\n);\n\nexport default SettingButton;","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LogoutButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SignUpButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LoginButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/lib/styleUtil.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingText.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingError.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingGender.js",["285"],"import React from 'react';\nimport styled from 'styled-components';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    box-sizing : border-box;\n    border: 1px solid #707070;\n    outline: none;\n    border-radius: 0px;\n    line-height: 2.5rem;\n    font-size: 1.2rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n`;\n\n\nconst SettingGender = ({label, ...rest}) => (\n    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Select {...rest} style={{fontSize: '1.2rem'}}>\n          <MenuItem value={'Male'}>Male</MenuItem>\n          <MenuItem value={'Female'}>Female</MenuItem>\n        </Select>\n    </Wrapper>\n\n    \n);\n\nexport default SettingGender;\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingDate.js",["286","287"],"import React from 'react';\nimport '../Date/react-datetime.css';\nimport Datetime from \"react-datetime\";\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst renderInput = ((props) => {\n    function clear() {\n      props.onChange({ target: { name: 'birthDate', value: '' } });\n    }\n    return (\n      <div>\n        <input {...props} style={{\n            width: '50%',\n            fontSize: '1.2rem',\n            boxSizing: 'border-box',\n            paddingTop: '0.5rem',\n            paddingBottom: '0.5rem',\n            paddingLeft: '0.5rem',\n            paddingRight: '0.5rem',\n            border: '1px solid #707070',\n            outline: 'none',\n            borderRadius: '0px',\n        }}/>\n      </div>\n    );\n});\n\nconst Settingdate = ({label, ...rest}) => (    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Datetime {...rest} renderInput={renderInput}/>\n    </Wrapper>    \n);\n\nexport default Settingdate;\n\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/InputWithLabel.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingContent.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingWrapper.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/Header.js",["288"],"import React from 'react';\nimport styled from 'styled-components';\nimport { shadow, media } from '../../../lib/styleUtil';\n\n\n\n// 상단 고정, 그림자\nconst Positioner = styled.div`\n    flex-direction: column;\n    position: fixed;\n    width: 100%;\n    z-index: 1000;\n`;\n\n// 흰 배경, 내용 중간 정렬\nconst WhiteBackground = styled.div`\n    background: white;\n    display: flex;\n    justify-content: center;\n    height: auto;\n`;\n\n// 해더의 내용\nconst HeaderContents = styled.div`\n    width: 1200px;\n    height: 65px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding-right: 1rem;\n    padding-left: 1rem;\n    ${media.wide`\n        width: 992px;\n    `}\n\n    ${media.tablet`\n        width: 100%;\n    `}\n`;\n\n// 로고\nconst Logo = styled.div`\n    font-size: x-large;\n    color: #FFC043;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\n// 중간 여백\nconst Spacer = styled.div`\n    flex-grow: 1;\n`;\n\n// 하단 그래디언트 테두리\nconst GradientBorder = styled.div`\n    height: 3px;\n    background: #707070;\n`;\n\nconst Header = ({children}) => {\n    return (\n        <Positioner>\n            <WhiteBackground>\n                <HeaderContents>\n                    <Logo>GLOKOOL</Logo>\n                    <Spacer/>\n                    {children}\n                </HeaderContents>\n            </WhiteBackground>\n            <GradientBorder/>\n        </Positioner>\n    );\n};\n\nexport default Header;",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":3,"column":10,"nodeType":"295","messageId":"296","endLine":3,"endColumn":14},{"ruleId":"293","severity":1,"message":"297","line":3,"column":16,"nodeType":"295","messageId":"296","endLine":3,"endColumn":25},{"ruleId":"293","severity":1,"message":"298","line":9,"column":10,"nodeType":"295","messageId":"296","endLine":9,"endColumn":21},{"ruleId":"293","severity":1,"message":"299","line":10,"column":10,"nodeType":"295","messageId":"296","endLine":10,"endColumn":22},{"ruleId":"293","severity":1,"message":"300","line":3,"column":10,"nodeType":"295","messageId":"296","endLine":3,"endColumn":15},{"ruleId":"293","severity":1,"message":"301","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":28},{"ruleId":"293","severity":1,"message":"302","line":1,"column":30,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"303","line":2,"column":22,"nodeType":"295","messageId":"296","endLine":2,"endColumn":30},{"ruleId":"304","severity":1,"message":"305","line":70,"column":19,"nodeType":"306","messageId":"307","endLine":70,"endColumn":21},{"ruleId":"304","severity":1,"message":"305","line":79,"column":27,"nodeType":"306","messageId":"307","endLine":79,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":109,"column":6,"nodeType":"310","endLine":109,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":132,"column":11,"nodeType":"314","messageId":"315","endLine":139,"endColumn":12},{"ruleId":"312","severity":1,"message":"313","line":141,"column":11,"nodeType":"314","messageId":"315","endLine":150,"endColumn":8},{"ruleId":"293","severity":1,"message":"316","line":227,"column":9,"nodeType":"295","messageId":"296","endLine":227,"endColumn":15},{"ruleId":"293","severity":1,"message":"317","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":26},{"ruleId":"293","severity":1,"message":"318","line":1,"column":28,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"319","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":14},{"ruleId":"293","severity":1,"message":"320","line":12,"column":3,"nodeType":"295","messageId":"296","endLine":12,"endColumn":17},{"ruleId":"293","severity":1,"message":"321","line":14,"column":3,"nodeType":"295","messageId":"296","endLine":14,"endColumn":14},{"ruleId":"293","severity":1,"message":"322","line":15,"column":3,"nodeType":"295","messageId":"296","endLine":15,"endColumn":16},{"ruleId":"293","severity":1,"message":"323","line":16,"column":3,"nodeType":"295","messageId":"296","endLine":16,"endColumn":15},{"ruleId":"293","severity":1,"message":"324","line":47,"column":10,"nodeType":"295","messageId":"296","endLine":47,"endColumn":14},{"ruleId":"293","severity":1,"message":"325","line":52,"column":9,"nodeType":"295","messageId":"296","endLine":52,"endColumn":13},{"ruleId":"308","severity":1,"message":"326","line":56,"column":19,"nodeType":"327","endLine":74,"endColumn":4},{"ruleId":"304","severity":1,"message":"305","line":57,"column":23,"nodeType":"306","messageId":"307","endLine":57,"endColumn":25},{"ruleId":"293","severity":1,"message":"328","line":66,"column":11,"nodeType":"295","messageId":"296","endLine":66,"endColumn":21},{"ruleId":"308","severity":1,"message":"329","line":74,"column":6,"nodeType":"310","endLine":74,"endColumn":8,"suggestions":"330"},{"ruleId":"293","severity":1,"message":"331","line":96,"column":13,"nodeType":"295","messageId":"296","endLine":96,"endColumn":21},{"ruleId":"312","severity":1,"message":"313","line":98,"column":9,"nodeType":"314","messageId":"315","endLine":105,"endColumn":10},{"ruleId":"312","severity":1,"message":"313","line":108,"column":9,"nodeType":"314","messageId":"315","endLine":117,"endColumn":10},{"ruleId":"293","severity":1,"message":"332","line":137,"column":9,"nodeType":"295","messageId":"296","endLine":137,"endColumn":21},{"ruleId":"333","severity":1,"message":"334","line":176,"column":13,"nodeType":"335","endLine":176,"endColumn":81},{"ruleId":"293","severity":1,"message":"336","line":8,"column":7,"nodeType":"295","messageId":"296","endLine":8,"endColumn":11},{"ruleId":"293","severity":1,"message":"337","line":16,"column":7,"nodeType":"295","messageId":"296","endLine":16,"endColumn":12},{"ruleId":"293","severity":1,"message":"338","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":14},{"ruleId":"293","severity":1,"message":"339","line":18,"column":14,"nodeType":"295","messageId":"296","endLine":18,"endColumn":19},{"ruleId":"293","severity":1,"message":"303","line":2,"column":22,"nodeType":"295","messageId":"296","endLine":2,"endColumn":30},{"ruleId":"293","severity":1,"message":"340","line":38,"column":23,"nodeType":"295","messageId":"296","endLine":38,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":46,"column":46,"nodeType":"306","messageId":"307","endLine":46,"endColumn":48},{"ruleId":"293","severity":1,"message":"341","line":56,"column":21,"nodeType":"295","messageId":"296","endLine":56,"endColumn":33},{"ruleId":"304","severity":1,"message":"305","line":60,"column":30,"nodeType":"306","messageId":"307","endLine":60,"endColumn":32},{"ruleId":"304","severity":1,"message":"305","line":63,"column":36,"nodeType":"306","messageId":"307","endLine":63,"endColumn":38},{"ruleId":"304","severity":1,"message":"305","line":66,"column":36,"nodeType":"306","messageId":"307","endLine":66,"endColumn":38},{"ruleId":"304","severity":1,"message":"305","line":69,"column":36,"nodeType":"306","messageId":"307","endLine":69,"endColumn":38},{"ruleId":"293","severity":1,"message":"342","line":15,"column":45,"nodeType":"295","messageId":"296","endLine":15,"endColumn":51},{"ruleId":"293","severity":1,"message":"332","line":18,"column":7,"nodeType":"295","messageId":"296","endLine":18,"endColumn":19},{"ruleId":"293","severity":1,"message":"343","line":37,"column":7,"nodeType":"295","messageId":"296","endLine":37,"endColumn":14},{"ruleId":"293","severity":1,"message":"344","line":130,"column":11,"nodeType":"295","messageId":"296","endLine":130,"endColumn":21},{"ruleId":"293","severity":1,"message":"345","line":134,"column":19,"nodeType":"295","messageId":"296","endLine":134,"endColumn":30},{"ruleId":"293","severity":1,"message":"346","line":134,"column":39,"nodeType":"295","messageId":"296","endLine":134,"endColumn":46},{"ruleId":"304","severity":1,"message":"305","line":175,"column":23,"nodeType":"306","messageId":"307","endLine":175,"endColumn":25},{"ruleId":"304","severity":1,"message":"305","line":177,"column":30,"nodeType":"306","messageId":"307","endLine":177,"endColumn":32},{"ruleId":"293","severity":1,"message":"347","line":193,"column":7,"nodeType":"295","messageId":"296","endLine":193,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":14},{"ruleId":"293","severity":1,"message":"337","line":16,"column":7,"nodeType":"295","messageId":"296","endLine":16,"endColumn":12},{"ruleId":"293","severity":1,"message":"338","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":14},{"ruleId":"293","severity":1,"message":"339","line":18,"column":14,"nodeType":"295","messageId":"296","endLine":18,"endColumn":19},{"ruleId":"293","severity":1,"message":"348","line":3,"column":10,"nodeType":"295","messageId":"296","endLine":3,"endColumn":16},"no-native-reassign",["349"],"no-negated-in-lhs",["350"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'firestore' is defined but never used.","'AuthWrapper' is defined but never used.","'ChatRoomLeft' is defined but never used.","'Route' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'useTheme' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'ChatDB', 'history', and 'user.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["351"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getUrl' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'InputWithLabel' is defined but never used.","'SettingDate' is defined but never used.","'SettingGender' is defined but never used.","'SettingError' is defined but never used.","'test' is assigned a value but never used.","'DATA' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'profileRef' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'user.displayName', 'user.email', 'user.photoURL', and 'user.uid'. Either include them or remove the dependency array.",["352"],"'progress' is assigned a value but never used.","'userDocument' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'Input' is assigned a value but never used.","'moment' is defined but never used.","'clear' is defined but never used.","'error' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'toDate' is defined but never used.","'profile' is assigned a value but never used.","'validation' is assigned a value but never used.","'AuthActions' is assigned a value but never used.","'history' is assigned a value but never used.","'gender' is assigned a value but never used.","'shadow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [ChatDB, history, user.emailVerified]",{"range":"357","text":"358"},"Update the dependencies array to be: [user.displayName, user.email, user.photoURL, user.uid]",{"range":"359","text":"360"},[3466,3468],"[ChatDB, history, user.emailVerified]",[2121,2123],"[user.displayName, user.email, user.photoURL, user.uid]"]