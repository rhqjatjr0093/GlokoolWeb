[{"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/index.js":"1","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Root.js":"2","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/reportWebVitals.js":"3","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/configureStore.js":"4","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/App.js":"5","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Firebase.js":"6","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/index.js":"7","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/index.js":"8","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/base.js":"9","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Auth.js":"10","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Main.js":"11","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Auth.js":"12","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Home.js":"13","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Email.js":"14","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Main.js":"15","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/LoginHeaderContainer.js":"16","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/HeaderContainer.js":"17","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/MainBody.js":"18","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/MainFooter.js":"19","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Setting.js":"20","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Chat.js":"21","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/index.js":"22","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/index.js":"23","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/index.js":"24","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Email.js":"25","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Register.js":"26","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Login.js":"27","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailVefication.js":"28","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailFail.js":"29","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthText.js":"30","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthError.js":"31","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/index.js":"32","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/index.js":"33","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthGender.js":"34","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthButton.js":"35","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthDate.js":"36","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthWrapper.js":"37","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthContent.js":"38","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/InputWithLabel.js":"39","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LogoutButton.js":"40","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LoginButton.js":"41","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SignUpButton.js":"42","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SettingButton.js":"43","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/lib/styleUtil.js":"44","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/Header.js":"45","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingText.js":"46","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingError.js":"47","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingGender.js":"48","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingDate.js":"49","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingButton.js":"50","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/InputWithLabel.js":"51","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingContent.js":"52","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingWrapper.js":"53"},{"size":337,"mtime":1613909703802,"results":"54","hashOfConfig":"55"},{"size":382,"mtime":1613539073162,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1613539073179,"results":"57","hashOfConfig":"55"},{"size":632,"mtime":1613539073178,"results":"58","hashOfConfig":"55"},{"size":2121,"mtime":1613539073162,"results":"59","hashOfConfig":"55"},{"size":894,"mtime":1613539073162,"results":"60","hashOfConfig":"55"},{"size":261,"mtime":1613539073179,"results":"61","hashOfConfig":"55"},{"size":167,"mtime":1613539073178,"results":"62","hashOfConfig":"55"},{"size":821,"mtime":1613539073179,"results":"63","hashOfConfig":"55"},{"size":1364,"mtime":1613539073178,"results":"64","hashOfConfig":"55"},{"size":1228,"mtime":1613539073178,"results":"65","hashOfConfig":"55"},{"size":1109,"mtime":1613539073177,"results":"66","hashOfConfig":"55"},{"size":1036,"mtime":1613609624700,"results":"67","hashOfConfig":"55"},{"size":1069,"mtime":1613539073177,"results":"68","hashOfConfig":"55"},{"size":819,"mtime":1613983171621,"results":"69","hashOfConfig":"55"},{"size":524,"mtime":1613539073172,"results":"70","hashOfConfig":"55"},{"size":570,"mtime":1613551837347,"results":"71","hashOfConfig":"55"},{"size":3549,"mtime":1613545865570,"results":"72","hashOfConfig":"55"},{"size":2737,"mtime":1614045504747,"results":"73","hashOfConfig":"55"},{"size":7539,"mtime":1613751838541,"results":"74","hashOfConfig":"55"},{"size":15202,"mtime":1613988397246,"results":"75","hashOfConfig":"55"},{"size":433,"mtime":1613539073171,"results":"76","hashOfConfig":"55"},{"size":115,"mtime":1613539073176,"results":"77","hashOfConfig":"55"},{"size":137,"mtime":1613539073176,"results":"78","hashOfConfig":"55"},{"size":2121,"mtime":1613539073175,"results":"79","hashOfConfig":"55"},{"size":6901,"mtime":1613539073176,"results":"80","hashOfConfig":"55"},{"size":3726,"mtime":1613627611307,"results":"81","hashOfConfig":"55"},{"size":2193,"mtime":1613539073176,"results":"82","hashOfConfig":"55"},{"size":1208,"mtime":1613539073176,"results":"83","hashOfConfig":"55"},{"size":583,"mtime":1613539073171,"results":"84","hashOfConfig":"55"},{"size":462,"mtime":1613539073171,"results":"85","hashOfConfig":"55"},{"size":267,"mtime":1613539073172,"results":"86","hashOfConfig":"55"},{"size":475,"mtime":1613539073175,"results":"87","hashOfConfig":"55"},{"size":903,"mtime":1613539073171,"results":"88","hashOfConfig":"55"},{"size":688,"mtime":1613539073170,"results":"89","hashOfConfig":"55"},{"size":1095,"mtime":1613539073171,"results":"90","hashOfConfig":"55"},{"size":1151,"mtime":1613539073171,"results":"91","hashOfConfig":"55"},{"size":332,"mtime":1613539073170,"results":"92","hashOfConfig":"55"},{"size":859,"mtime":1613539073171,"results":"93","hashOfConfig":"55"},{"size":910,"mtime":1613609848353,"results":"94","hashOfConfig":"55"},{"size":712,"mtime":1613611670191,"results":"95","hashOfConfig":"55"},{"size":805,"mtime":1613554475990,"results":"96","hashOfConfig":"55"},{"size":845,"mtime":1613554501937,"results":"97","hashOfConfig":"55"},{"size":1274,"mtime":1613539073177,"results":"98","hashOfConfig":"55"},{"size":1654,"mtime":1613612814392,"results":"99","hashOfConfig":"55"},{"size":589,"mtime":1613539073175,"results":"100","hashOfConfig":"55"},{"size":468,"mtime":1613539073174,"results":"101","hashOfConfig":"55"},{"size":909,"mtime":1613539073175,"results":"102","hashOfConfig":"55"},{"size":1101,"mtime":1613539073174,"results":"103","hashOfConfig":"55"},{"size":694,"mtime":1613539073174,"results":"104","hashOfConfig":"55"},{"size":859,"mtime":1613539073174,"results":"105","hashOfConfig":"55"},{"size":338,"mtime":1613539073174,"results":"106","hashOfConfig":"55"},{"size":1056,"mtime":1613539073175,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1m44al4",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/index.js",[],["229","230"],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Root.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/reportWebVitals.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/configureStore.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/App.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/Firebase.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/base.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Auth.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/redux/modules/Main.js",["231","232"],"import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport { auth, firestore } from '../../Firebase';\n\nconst CHANGE_INPUT = 'main/CHANGE_INPUT'; // input 값 변경\nconst INITIALIZE_FORM = 'main/INITIALIZE_FORM'; // form 초기화\n\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \n\nconst SET_ERROR = 'main/SET_ERROR'; // 오류 설정\n\nconst initialState = Map({\n    chatRoom: Map([]),\n    setting: Map({\n        name : '',\n        email : '',\n        gender : '',\n        signupDate : new Date(),  //가입한 날짜\n        birthDate : new Date()\n    })\n});\n\nexport default handleActions({\n    [CHANGE_INPUT]: (state, action) => {\n        const { form, name, value } = action.payload;\n        return state.setIn([form, 'form', name], value);\n    },\n    [INITIALIZE_FORM]: (state, action) => {\n        const initialForm = initialState.get(action.payload);\n        return state.set(action.payload, initialForm);\n    },\n    [SET_ERROR]: (state, action) => {\n        const { form, message } = action.payload;\n        return state.setIn([form, 'error'], message);\n    }\n}, initialState);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Auth.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Home.js",["233"],"import React, { Component } from \"react\";\nimport { auth } from \"../Firebase\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport HeaderContainer from \"../components/Base/HeaderContainer\";\nimport * as baseActions from \"../redux/modules/base\";\nimport MainBody from \"../components/Base/MainBody\";\nimport MainFooter from \"../components/Base/MainFooter\";\n\nclass Home extends Component {\n  componentDidMount() {\n    const user = auth().currentUser;\n    //첫 로딩후에만 실행되는 코드\n    //이메일 전송 및 확인 (오류 발생시 최대 5번 재시도)\n    if (user != null) {\n      this.props.history.push(\"/main\");\n    } else {\n      console.log(user);\n    }\n  }\n  render() {\n    return (\n      <div>\n          <HeaderContainer />\n          <MainBody />\n          <MainFooter />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({}),\n  (dispatch) => ({\n    BaseActions: bindActionCreators(baseActions, dispatch),\n  })\n)(Home);\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Email.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/pages/Main.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/LoginHeaderContainer.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/HeaderContainer.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/MainBody.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/MainFooter.js",["234","235","236","237","238"],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Setting.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"import React, { Component, useState } from \"react\";\nimport { auth, storage, firestore } from \"../../Firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {\n  SettingContent,\n  InputWithLabel,\n  SettingButton,\n  SettingDate,\n  SettingGender,\n  SettingError,\n  SettingWrapper,\n} from \"../../components/Setting\";\nimport profile from \"../../assets/profile.jpg\";\nimport ImageUploader from \"react-images-upload\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst Setting = () => {\n  const user = auth().currentUser;\n  const [modal, setModal] = React.useState(false);\n  const [picture, setPicture] = React.useState(null);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [email, setEmail] = React.useState();\n  const [username, setUserName] = React.useState();\n  const [gender, setGender] = React.useState();\n  const [test, setTest] = React.useState();\n  const [birthDate, setBirthDate] = React.useState();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const DATA = {\n    username: user.displayName,\n  };\n\n  React.useEffect(async () => {\n    if (user.photoURL == \"\" || user.photoURL == null) {\n      setPicture(profile);\n    } else {\n      setPicture(user.photoURL);\n    }\n\n    setEmail(user.email);\n    setUserName(user.displayName);\n\n    const profileRef = await firestore()\n      .collection(\"Guides\")\n      .doc(user.uid)\n      .get()\n      .then(function (doc) {\n        setGender(doc.data().gender);\n        setTest(doc.data().gender);\n      });\n  }, []);\n\n  const ImageClick = () => {\n    setModal(true);\n  };\n\n  const CloseImage = () => {\n    setModal(false);\n  };\n\n  const onDrop = (pic, url) => {\n    setModal(false);\n    setPicture(url[0]);\n    let type = pic[0].type.split(\"/\");\n\n    const picRef = storage()\n      .ref()\n      .child(`profile/${user.uid}.${type[1]}`)\n      .put(pic[0]);\n    picRef.on(\n      storage.TaskEvent.STATE_CHANGED,\n      function (snapshot) {\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n        switch (snapshot.state) {\n          case storage.TaskState.PAUSED:\n            console.log(\"Upload is paused\");\n            break;\n          case storage.TaskState.RUNNING:\n            console.log(\"Upload is running\");\n            break;\n        }\n      },\n      function (error) {\n        switch (error.code) {\n          case \"storage/unauthorized\":\n            break;\n\n          case \"storage/canceled\":\n            break;\n\n          case \"storage/unknown\":\n            break;\n        }\n      },\n      function () {\n        picRef.snapshot.ref.getDownloadURL().then(async function (downloadURL) {\n          user.updateProfile({\n            photoURL: downloadURL,\n          });\n        });\n      }\n    );\n\n    CloseImage();\n  };\n\n  const updateProfile = async () => {\n    user.updateProfile({\n      displayName: username,\n    });\n    console.log(birthDate);\n\n    var userDocument = await firestore()\n      .collection(\"Guides\")\n      .doc(user?.uid)\n      .update({\n        name: username,\n        gender: gender,\n        birthDate: birthDate,\n      })\n      .then(() => {\n        console.log(\"프로필 문서 업데이트 성공\");\n      })\n      .catch(() => {\n        console.log(\"프로필 문서 업데이트 성공\");\n      });\n\n    history.push(\"/main\");\n  };\n\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleChangeUserName = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handleChangeGender = (e) => {\n    setGender(e.target.value);\n  };\n\n  const handleChangeBirthDate = (e) => {\n    setBirthDate(e.target.value);\n  };\n\n  return (\n    <div>\n      <SettingWrapper>\n        <SettingContent title=\"회원 정보 수정\">\n          <button className={classes.button}>\n            <img className={classes.image} src={picture} onClick={ImageClick} />\n          </button>\n\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-basic\"\n              name=\"email\"\n              label=\"이메일\"\n              variant=\"outlined\"\n              value={email}\n              onChange={handleChangeEmail}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n\n            <TextField\n              id=\"outlined-basic\"\n              name=\"username\"\n              label=\"닉네임\"\n              variant=\"outlined\"\n              value={username}\n              onChange={handleChangeUserName}\n            />\n\n            {/* 성별 선택 폼 */}\n            <FormControl className={classes.formControl}>\n              <InputLabel\n                shrink\n                id=\"demo-simple-select-placeholder-label-label\"\n              >\n                성별\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-placeholder-label-label\"\n                id=\"demo-simple-select-placeholder-label\"\n                defaultValue={\"Male\"}\n                value={gender}\n                onChange={handleChangeGender}\n                displayEmpty\n                className={classes.selectEmpty}\n              >\n                <MenuItem value={\"Male\"}>Male</MenuItem>\n                <MenuItem value={\"Female\"}>Female</MenuItem>\n              </Select>\n            </FormControl>\n\n            {/* 생년월일 */}\n            <TextField\n              id=\"date\"\n              label=\"생년월일\"\n              type=\"date\"\n              defaultValue={birthDate}\n              className={classes.textField}\n              onChange={handleChangeBirthDate}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n          <SettingButton onClick={updateProfile}>수정</SettingButton>\n        </SettingContent>\n      </SettingWrapper>\n\n      <Modal\n        open={modal}\n        onClose={CloseImage}\n        aria-labelledby=\"Image Modal\"\n        aria-describedby=\"이미지 업로드를 위한 Modal 창\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <ImageUploader\n            withIcon={true}\n            buttonText=\"이미지를 선택하세요\"\n            onChange={onDrop}\n            singleImage={true}\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n            maxFileSize={5242880}\n          />\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  imgContainer: {},\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 100,\n    margin: 10,\n  },\n  button: {\n    backgroundColor: \"#00FF0000\",\n    borderColor: \"#00FF0000\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"40ch\",\n    },\n  },\n}));\n\nexport default Setting;\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Main/Chat.js",["257","258","259","260","261","262","263","264","265","266","267"],"import React, { useCallback, useRef } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { useHistory } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Avatar, ListItemAvatar, Toolbar } from \"@material-ui/core\";\nimport { GiftedChat, Composer, Bubble, Send } from \"react-native-gifted-chat\";\nimport { database, auth, storage } from \"../../Firebase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { IconButton } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ImageUploader from \"react-images-upload\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Recorder } from \"react-voice-recorder\";\nimport \"react-voice-recorder/dist/index.css\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst Chat = () => {\n  const user = auth().currentUser;\n  const history = useHistory();\n  const classes = useStyles();\n  const [chatMessages, setChatMessages] = React.useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [Chat, setChat] = React.useState();\n  const [roomName, setRoomName] = React.useState();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [audioModalOpen, setAudioModalOpen] = React.useState(false);\n  const [audioDetails, setAudioDetails] = React.useState({\n    url: null,\n    blob: null,\n    chunks: null,\n    duration: {\n      h: 0,\n      m: 0,\n      s: 0,\n    },\n  });\n\n  const chatRoom = [\n    // {\n    //   name: \"minJung\",\n    //   tour: \"GyeongChun Forest Line\",\n    //   chatRoom: \"test1\",\n    // },\n    // {\n    //   name: \"hyeseon\",\n    //   tour: \"GyengChun Forest\",\n    //   chatRoom: \"test2\",\n    // },\n  ];\n\n  //메시지 아이디 생성기 (출처: https://github.com/liplylie/ReactNativeChatImageAudio/blob/master/src/components/chat.js)\n  //메시지 구분을 위한 임시 조치 (시간, uid를 넣어서 만들면 될 듯)\n  const messageIdGenerator = () => {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      let r = (Math.random() * 16) | 0,\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  };\n\n  const changeChatRoom = (room) => {\n    const ChatRoom = database().ref(\"/chats/\" + room);\n    setChat(ChatRoom);\n    setRoomName(room);\n  };\n\n  //componentwillmount 대신 사용\n  //페이지 최초 로딩시 채팅 메시지 로딩\n  React.useEffect(() => {\n    if (user.emailVerified == false) {\n      history.push(\"/email/fail\");\n    }\n\n    //chatRoomInitiate('test1');\n    setChatMessages([]); //로컬 메시지 저장소 초기화\n\n    const ChatRoom = database().ref(\"/chats/test1\");\n    setChat(ChatRoom);\n    setRoomName(\"test1\");\n\n    return () => {\n      setChatMessages([]);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (Chat == undefined) {\n      //아직 초기화 되지 않은 값임\n    } else {\n      //Chat 값이 바뀌었을 경우 실행\n      //채팅방 전환 작업 실행\n\n      setChatMessages([]); //로컬 메시지 저장소 초기화\n\n      Chat.on(\"value\", (snapshot) => {\n        if (!snapshot.val()) {\n          return;\n        }\n        let { messages } = snapshot.val();\n        messages = messages.map((node) => {\n          const message = {};\n          message._id = node._id;\n          message.text = node.messageType === \"message\" ? node.text : \"\";\n          message.createdAt = node.createdAt;\n          message.user = {\n            _id: node.user._id,\n            // 바꿔야 됌\n          };\n          message.image = node.messageType === \"image\" ? node.image : \"\";\n          message.audio = node.messageType === \"audio\" ? node.audio : \"\";\n          message.messageType = node.messageType;\n          return message;\n        });\n        setChatMessages([...messages]);\n      });\n    }\n  }, [Chat]);\n\n  React.useEffect(() => {\n    //채팅방을 클릭했을 때 작동\n    //selectedIndex에는 채팅방 객체정보 함유\n\n    changeChatRoom(selectedIndex.chatRoom);\n  }, [selectedIndex]);\n\n  // 이미지 업로드 기능 관련 구현\n  const clickImageSend = () => {\n    setModalOpen(true);\n    handleMenuClose();\n  };\n\n  const handleCloseImage = () => {\n    setModalOpen(false);\n  };\n\n  const onDrop = (pic, url) => {\n    const MessageID = messageIdGenerator();\n    let type = pic[0].type.split(\"/\"); //[1] 에 확장자 들어있음\n\n    const picRef = storage()\n      .ref()\n      .child(`/chats/${roomName}/picture/${MessageID}.${type[1]}`)\n      .put(pic[0]);\n    picRef.on(\n      storage.TaskEvent.STATE_CHANGED,\n      function (snapshot) {\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\n          \"Upload is \" + MessageID,\n          \".\" + type[1] + progress + \"% done\"\n        );\n        switch (snapshot.state) {\n          case storage.TaskState.PAUSED:\n            console.log(\"Upload is paused\");\n            break;\n          case storage.TaskState.RUNNING:\n            console.log(\"Upload is running\");\n            break;\n        }\n      },\n      function (error) {\n        switch (error.code) {\n          case \"storage/unauthorized\":\n            break;\n\n          case \"storage/canceled\":\n            break;\n\n          case \"storage/unknown\":\n            break;\n        }\n      },\n      function () {\n        picRef.snapshot.ref.getDownloadURL().then(async function (downloadURL) {\n          //업로드 완료\n          const message = {\n            _id: MessageID,\n            createdAt: new Date().getTime(),\n            user: {\n              _id: user?.uid,\n            },\n            image: downloadURL, //다운로드URL 전달\n            messageType: \"image\",\n          };\n\n          await Chat.update({ messages: [message, ...chatMessages] });\n        });\n      }\n    );\n    handleCloseImage();\n  };\n\n  // 오디오 업로드 기능 관련 구현\n\n  const audioReset = () => {\n    setAudioDetails({\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0,\n      },\n    });\n  };\n\n  const audioStop = (data) => {\n    setAudioDetails(data);\n    console.log(audioDetails);\n  };\n\n  const audioUpload = async (file) => {\n    const MessageID = messageIdGenerator();\n    const reference = storage().ref();\n    const voiceRef = reference.child(`/chats/${roomName}/voice/${MessageID}`);\n\n    voiceRef.put(file).then(async (response) => {\n      await storage()\n        .ref(`/chats/${roomName}/voice/${MessageID}`)\n        .getDownloadURL()\n        .then((result) => {\n          const message = {\n            _id: MessageID,\n            createdAt: new Date().getTime(),\n            user: {\n              _id: `${user?.uid}`,\n              name: user?.displayName,\n              avatar: user?.photoURL,\n            },\n            audio: result, //파일 경로만 전달\n            messageType: \"audio\",\n          };\n          Chat.update({ messages: [message, ...chatMessages] });\n          setAudioModalOpen(false);\n        });\n    });\n  };\n\n  const handleAudioModal = () => {\n    setAudioModalOpen(true);\n    handleMenuClose();\n  };\n\n  const handleCloseAudio = () => {\n    setAudioModalOpen(false);\n    audioReset();\n  };\n\n  const getUrl = async (props) => {\n    const url = await storage()\n      .ref(props.currentMessage.audio)\n      .getDownloadURL();\n\n    console.log(url);\n\n    return url;\n  };\n\n  const renderAudio = (props) => {\n    return (\n      <div className={classes.player}>\n        <audio src={props.currentMessage.audio} controls />\n      </div>\n    );\n  };\n\n  // 오버플로우 메뉴 구현\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const renderLoading = () => {\n    return <div>Loading...</div>;\n  };\n\n  const onSend = async (messages = []) => {\n    messages[0].messageType = \"message\";\n    messages[0].createdAt = new Date().getTime();\n\n    await Chat.update({ messages: [messages[0], ...chatMessages] });\n  };\n\n  const renderBubble = (props) => {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          left: {\n            backgroundColor: \"#F5F5F5\",\n            fontColor: \"black\",\n            fontWeight: \"bold\",\n          },\n          right: {\n            backgroundColor: \"#FFC043\",\n            fontWeight: \"bold\",\n          },\n        }}\n      />\n    );\n  };\n\n  const renderComposer = (props) => {\n    return (\n      <Composer\n        {...props}\n        textInputProps={{\n          ...props.textInputProps,\n          autoFocus: true,\n          blurOnSubmit: true,\n          onSubmitEditing: () => {\n            //Enter 키를 입력시 Send 할 수 있도록\n            if (props.text && props.onSend) {\n              props.onSend({ text: props.text.trim() }, true);\n            }\n          },\n        }}\n        textInputStyle={{ justifyContent: \"center\" }}\n      />\n    );\n  };\n\n  const renderActions = (props) => {\n    return (\n      <div>\n        <IconButton onClick={handleMenuClick}>\n          <FontAwesomeIcon\n            icon={faBars}\n            style={{ color: \"#FFC043\" }}\n            size={32}\n          />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleMenuClose}\n        >\n          <MenuItem onClick={clickImageSend}>이미지</MenuItem>\n          <MenuItem onClick={handleAudioModal}>음성</MenuItem>\n        </Menu>\n      </div>\n    );\n  };\n\n  const renderSend = (props) => {\n    return (\n      <Send\n        {...props}\n        containerStyle={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderWidth: 0,\n          marginLeft: 15,\n          marginRight: 5,\n          marginBottom: 1,\n          width: 60,\n        }}\n      >\n        <FontAwesomeIcon\n          icon={faPaperPlane}\n          style={{ color: \"#FFC043\" }}\n          size={60}\n        />\n      </Send>\n    );\n  };\n\n  return (\n    <div>\n      {Object.keys(chatRoom).length == 0 ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"1000px\",\n            backgroundColor: \"#c9c9c9\",\n            opacity: \"0.3\",\n            position: \"relative\",\n          }}\n        >\n          <span\n            style={{\n              width: \"300px\",\n              fontSize: \"20px\",\n              color: \"black\",\n              opacity: \"2\",\n              textAlign: \"center\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%,-50%)\",\n            }}\n          >\n            진행중인 투어 없음\n          </span>\n        </div>\n      ) : (\n        <div>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n              <List button selected>\n                {chatRoom.map((key) => (\n                  <ListItem\n                    key={key}\n                    button\n                    selected={selectedIndex === key}\n                    classes={{ selected: classes.active }}\n                    onClick={() => setSelectedIndex(key)}\n                  >\n                    <ListItemAvatar>\n                      <Avatar src=\"../../assets/profile.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText primary={key.tour} secondary={key.name} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          </Drawer>\n\n          <div className={classes.chat}>\n            <Toolbar />\n            <GiftedChat\n              user={{\n                _id: `${user?.uid}`,\n                name: user.displayName,\n              }}\n              infiniteScroll={true}\n              createdAt={new Date().getTime()}\n              textInputProps={{ autoFocus: true }}\n              messages={chatMessages}\n              alwaysShowSend={true}\n              renderUsernameOnMessage={true}\n              onSend={(messages) => onSend(messages)}\n              renderActions={renderActions}\n              renderSend={renderSend}\n              renderLoading={renderLoading}\n              renderBubble={renderBubble}\n              renderMessageAudio={renderAudio}\n              renderComposer={renderComposer}\n              renderAvatar={null}\n            />\n\n            <Modal\n              open={modalOpen}\n              onClose={handleCloseImage}\n              aria-labelledby=\"Image Modal\"\n              aria-describedby=\"이미지 업로드를 위한 Modal 창\"\n            >\n              <div style={modalStyle} className={classes.paper}>\n                <ImageUploader\n                  withIcon={true}\n                  buttonText=\"이미지를 선택하세요\"\n                  onChange={onDrop}\n                  singleImage={true}\n                  imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n                  maxFileSize={5242880}\n                />\n              </div>\n            </Modal>\n            <Modal\n              open={audioModalOpen}\n              onClose={handleCloseAudio}\n              aria-labelledby=\"Audio Modal\"\n              aria-describedby=\"오디오 메시지 전송을 위한 Modal\"\n            >\n              <div style={modalStyle} className={classes.paper}>\n                <Recorder\n                  record={true}\n                  title={\"녹음기\"}\n                  audioURL={audioDetails.url}\n                  showUIAudio\n                  handleAudioStop={(data) => audioStop(data)}\n                  handleAudioUpload={(data) => audioUpload(data)}\n                  handleRest={() => audioReset()}\n                />\n              </div>\n            </Modal>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    position: \"relative\",\n    width: 300,\n    flexShrink: 0,\n    zIndex: 0,\n  },\n  drawerPaper: {\n    width: 300,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  avatar: {\n    width: 52,\n    height: 52,\n    borderRadius: 100,\n  },\n  chat: {\n    position: \"fixed\",\n    bottom: 0,\n    left: 300,\n    right: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    borderColor: \"gray\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n  },\n  player: {\n    padding: 5,\n  },\n  active: {\n    backgroundColor: \"red\",\n  },\n}));\n\nexport default Chat;\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Email.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Register.js",["268","269","270","271","272","273","274","275","276"],"import React, { Component } from \"react\";\nimport {\n  AuthContent,\n  InputWithLabel,\n  AuthButton,\n  AuthDate,\n  AuthGender,\n  AuthError,\n} from \"../../components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { auth, firestore } from \"../../Firebase\";\nimport * as authActions from \"../../redux/modules/Auth\";\nimport moment from \"moment\";\nimport { isEmail, isLength, isAlphanumeric, toDate } from \"validator\";\n\nconst profileDocUpdate = async (user, name, email, gender, birthDate) => {\n  var userDocument = await firestore()\n    .collection(\"Guides\")\n    .doc(user?.uid)\n    .set({\n      name: name,\n      email: email,\n      gender: gender,\n      signupDate: new Date(), //가입한 날짜\n      birthDate: birthDate,\n    })\n    .then(() => {\n      console.log(\"프로필 문서 업데이트 성공\");\n    })\n    .catch(() => {\n      console.log(\"프로필 문서 업데이트 성공\");\n    });\n};\n\nconst profileUpdate = async (user, name) => {\n  var profile = await user\n    .updateProfile({\n      displayName: name,\n      photoURL: \"\",\n    })\n    .then(() => {\n      console.log(\"프로필 업데이트 성공\");\n    })\n    .catch(() => {\n      console.log(\"프로필 업데이트 실패\");\n    });\n};\n\nclass Register extends Component {\n  componentDidMount() {\n    if (auth().currentUser != null) {\n      console.log(auth().currentUser);\n      this.props.history.push(\"/main\");\n    }\n  }\n\n  componentWillUnmount() {\n    //화면을 이동할때 실행\n    //입력값 초기화 실행\n\n    this.handleChange({ target: { name: \"email\", value: \"\" } });\n    this.handleChange({ target: { name: \"password\", value: \"\" } });\n    this.handleChange({ target: { name: \"passwordConfirm\", value: \"\" } });\n    this.handleChange({ target: { name: \"birthDate\", value: \"\" } });\n    this.handleChange({ target: { name: \"gender\", value: \"Male\" } });\n  }\n\n  setError = (message) => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: \"register\",\n      message,\n    });\n  };\n\n  validate = {\n    email: (value) => {\n      if (!isEmail(value)) {\n        this.setError(\"잘못된 이메일 형식 입니다.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    username: (value) => {\n      if (!isAlphanumeric(value) || !isLength(value, { min: 4, max: 15 })) {\n        this.setError(\n          \"닉네임은 4~15 글자의 알파벳 혹은 숫자로 이뤄져야 합니다.\"\n        );\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    password: (value) => {\n      if (!isLength(value, { min: 8 })) {\n        this.setError(\"비밀번호를 8자 이상 입력하세요.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    passwordConfirm: (value) => {\n      if (this.props.form.get(\"password\") !== value) {\n        this.setError(\"입력한 비밀번호와 일치하지 않습니다.\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    birthDate: (value) => {\n      return true;\n    },\n    gender: (value) => {\n      return true;\n    },\n  };\n\n  handleChange = (e) => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: \"register\",\n    });\n\n    const validation = this.validate[name](value);\n  };\n\n  handleLocalRegister = async () => {\n    const { form, AuthActions, error, history } = this.props;\n    const {\n      email,\n      username,\n      password,\n      passwordConfirm,\n      birthDate,\n      gender,\n    } = form.toJS();\n\n    const { validate } = this;\n\n    if (error) return;\n    if (\n      !validate[\"email\"](email) ||\n      !validate[\"username\"](username) ||\n      !validate[\"password\"](password) ||\n      !validate[\"passwordConfirm\"](passwordConfirm) ||\n      !validate[\"birthDate\"](birthDate)\n    ) {\n      return;\n    }\n\n    this.setError(null);\n\n    await auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async (response) => {\n        await profileDocUpdate(\n          response.user,\n          username,\n          email,\n          gender,\n          birthDate\n        );\n        await profileUpdate(response.user, username);\n        this.props.history.push(\"/auth/email\");\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n\n        if (errorCode == \"auth/email-already-in-use\") {\n          this.setError(\"이미 사용중인 이메일입니다.\");\n        } else if (errorCode == \"auth/weak-password\") {\n          this.setError(\"비밀번호가 너무 약합니다\");\n        } else {\n          this.setError(errorCode);\n        }\n      });\n  };\n\n  render() {\n    const { error } = this.props;\n    const {\n      email,\n      username,\n      password,\n      passwordConfirm,\n      birthDate,\n      gender,\n    } = this.props.form.toJS();\n    const { handleChange, handleLocalRegister } = this;\n\n    return (\n      <AuthContent title=\"회원가입\">\n        <InputWithLabel\n          label=\"이메일\"\n          name=\"email\"\n          placeholder=\"이메일\"\n          value={email}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"닉네임\"\n          name=\"username\"\n          placeholder=\"가이드 명으로 표시됩니다\"\n          value={username}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"비밀번호\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <InputWithLabel\n          label=\"비밀번호 확인\"\n          name=\"passwordConfirm\"\n          placeholder=\"비밀번호 확인\"\n          type=\"password\"\n          value={passwordConfirm}\n          onChange={handleChange}\n        />\n        <AuthDate\n          label=\"생년월일\"\n          value={birthDate}\n          dateFormat=\"YYYY-MM-DD\"\n          timeFormat={false}\n          closeOnSelect={true}\n          onChange={(date) =>\n            handleChange({\n              target: { name: \"birthDate\", value: moment(date).format(\"X\") },\n            })\n          }\n        />\n        <AuthGender\n          label=\"성별\"\n          value={\"Male\"}\n          onChange={(gender) =>\n            handleChange({\n              target: { name: \"gender\", value: gender.target.value },\n            })\n          }\n        />\n        {error && <AuthError>{error}</AuthError>}\n        <AuthButton onClick={handleLocalRegister}>회원가입</AuthButton>\n      </AuthContent>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    form: state.auth.getIn([\"register\", \"form\"]),\n    error: state.auth.getIn([\"register\", \"error\"]),\n    exists: state.auth.getIn([\"register\", \"exists\"]),\n  }),\n  (dispatch) => ({\n    AuthActions: bindActionCreators(authActions, dispatch),\n  })\n)(Register);\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Auth/Login.js",["277","278","279","280","281","282","283"],"import React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, AuthError } from '../../components/Auth';\nimport { auth } from '../../Firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../redux/modules/Auth';\n\n\nclass Login extends Component {\n\n    componentDidMount() {\n        if(auth().currentUser != null){\n            console.log(auth().currentUser);\n            this.props.history.push('/main');\n        }\n    }\n\n    setError = (message) => {\n        const { AuthActions } = this.props;\n        AuthActions.setError({\n            form: 'login',\n            message\n        });\n    }\n\n    handleChange = (e) => {\n        const { AuthActions } = this.props;\n        const { name, value } = e.target;\n\n        AuthActions.changeInput({\n            name,\n            value,\n            form: 'login'\n        });\n    }\n\n    handleLogin = () => {\n        const { form, error } = this.props;\n        const { email, password } = form.toJS();\n        \n        auth().setPersistence(auth.Auth.Persistence.LOCAL);\n\n        auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                console.log(result.user)\n                if(result.user.emailVerified == true){\n                    //this.props.history.push('/main');\n                }\n                else{\n                    //this.props.history.push('/email/fail');\n                }\n               \n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                console.log(errorCode);\n                \n                if(errorCode == 'auth/invalid-email'){\n                    this.setError('올바르지 않은 이메일 형식입니다');\n                }\n                else if (errorCode == 'auth/user-disabled'){\n                    this.setError('정지된 회원입니다');\n                }\n                else if (errorCode == 'auth/user-not-found'){\n                    this.setError('없는 회원입니다. 이메일을 확인해주세요');\n                }\n                else if (errorCode == 'auth/wrong-password'){\n                    this.setError('비밀번호가 틀렸습니다');\n                }\n                else{\n                    this.setError(errorCode);\n                }\n            })\n    }\n\n    render() {\n        const { error } = this.props;\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\n        const { handleChange, handleLogin } = this;\n\n        return (\n            <AuthContent title=\"로그인\">\n                <InputWithLabel \n                    label=\"이메일\" \n                    name=\"email\" \n                    placeholder=\"이메일\" \n                    value={email} \n                    onChange={handleChange}\n                />\n                <InputWithLabel \n                    label=\"비밀번호\" \n                    name=\"password\" \n                    placeholder=\"비밀번호\" \n                    type=\"password\" \n                    value={password} \n                    onChange={handleChange}\n                />\n                {\n                    error && <AuthError>{error}</AuthError>\n                }\n                <AuthButton onClick={() => handleLogin()}>로그인</AuthButton>\n            </AuthContent>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        form: state.auth.getIn(['login', 'form']),\n        error: state.auth.getIn(['login', 'error']),\n    }),\n    (dispatch) => ({\n        AuthActions: bindActionCreators(authActions, dispatch)\n    })\n)(Login);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailVefication.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/containers/Email/EmailFail.js",["284"],"import React, { Component } from 'react';\nimport { AuthContent, AuthButton, AuthText } from '../../components/Auth';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { auth } from '../../Firebase';\nimport * as authActions from '../../redux/modules/Auth';\n\nconst user = auth().currentUser;\n\nclass EmailFail extends Component {\n    \n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.props.history.push('/email/verification');\n    }\n\n    handleClick2 = () => {\n        auth().signOut();\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <AuthContent title=\"이메일 인증 실패\">\n                <AuthText context='이메일 인증이 완료되지 않았습니다'/>\n                <AuthText context='링크를 클릭해주세요'/>\n                <AuthButton onClick={this.handleClick}>이메일 재 전송</AuthButton>\n                <AuthButton onClick={this.handleClick2}>메인으로</AuthButton>\n            </AuthContent>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n    }),\n    (dispatch) => ({\n        AuthActions: bindActionCreators(authActions, dispatch)\n    })\n)(EmailFail);","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthText.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthError.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/index.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthGender.js",["285"],"import React from 'react';\nimport styled from 'styled-components';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    box-sizing : border-box;\n    border: 1px solid #707070;\n    outline: none;\n    border-radius: 0px;\n    line-height: 2.5rem;\n    font-size: 1.2rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n`;\n\n\nconst AuthGender = ({label, ...rest}) => (\n    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Select {...rest} style={{fontSize: '1.2rem'}}>\n          <MenuItem value={'Male'}>Male</MenuItem>\n          <MenuItem value={'Female'}>Female</MenuItem>\n        </Select>\n    </Wrapper>\n\n    \n);\n\nexport default AuthGender;\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthDate.js",["286","287"],"import React from 'react';\nimport '../Date/react-datetime.css';\nimport Datetime from \"react-datetime\";\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst renderInput = ((props) => {\n    function clear() {\n      props.onChange({ target: { name: 'birthDate', value: '' } });\n    }\n    return (\n      <div>\n        <input {...props} style={{\n            width: '50%',\n            fontSize: '1.2rem',\n            boxSizing: 'border-box',\n            paddingTop: '0.5rem',\n            paddingBottom: '0.5rem',\n            paddingLeft: '0.5rem',\n            paddingRight: '0.5rem',\n            border: '1px solid #707070',\n            outline: 'none',\n            borderRadius: '0px',\n        }}/>\n      </div>\n    );\n});\n\nconst Authdate = ({label, ...rest}) => (    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Datetime {...rest} renderInput={renderInput}/>\n    </Wrapper>    \n);\n\nexport default Authdate;\n\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthWrapper.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/AuthContent.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Auth/InputWithLabel.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LogoutButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/LoginButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SignUpButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/SettingButton.js",["288"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { shadow } from '../../../lib/styleUtil';\nimport { auth } from '../../../Firebase'\n\nconst BorderedButton = styled(Link)`\n    font-weight: 600;\n    color: #666d75;\n    // border: 1px solid #666d75;\n    padding: 0.5rem;\n    padding-bottom: 0.4rem;\n    cursor: pointer;\n    border-radius: 2px;\n    text-decoration: none;\n    transition: .2s all;\n    \n\n    &:hover {\n        background: #FFC043;\n        color: white;\n        ${shadow(1)}\n    }\n\n    &:active {\n        /* 마우스 클릭시 아래로 미세하게 움직임 */\n        transform: translateY(3px);\n    }\n\n\n`;\n\nconst SettingButton = () => (\n    \n    <BorderedButton to=\"/main/setting\">\n        개인정보 수정\n    </BorderedButton>\n);\n\nexport default SettingButton;","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/lib/styleUtil.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Base/Header/Header.js",["289"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { shadow, media } from \"../../../lib/styleUtil\";\nimport logoImg from \"../../../assets/Glokool_logo_black.png\";\n\n// header 상단 고정, 그림자\nconst Positioner = styled.div`\n  flex-direction: column;\n  position: fixed;\n  width: 100%;\n  z-index: 1000;\n`;\n\n// 흰 배경, 내용 중간 정렬\nconst WhiteBackground = styled.div`\n  width: 100%;\n  background: #ffd853;\n  display: flex;\n  justify-content: center;\n  height: auto;\n`;\n\n// 해더의 내용\nconst HeaderContents = styled.div`\n  width: 1400px;\n  height: 65px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  padding-right: 1rem;\n  padding-left: 1rem;\n  ${media.wide`\n        width: 992px;\n    `}\n\n  ${media.tablet`\n        width: 100%;\n    `}\n`;\n\n// 로고\nconst Logo = styled.div`\n  //   width: 100%;\n  padding: 0 100px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\n// 중간 여백\nconst Spacer = styled.div`\n  flex-grow: 1;\n`;\n\n// 하단 그래디언트 테두리\nconst GradientBorder = styled.div`\n  width: 100%;\n  height: 1px;\n  opacity: .4;\n  background: #707070;\n`;\n\nconst LogoStyle = {\n  height: \"20px\",\n  width: \"129px\",\n};\n\nconst Header = ({ children }) => {\n  return (\n    <Positioner>\n      <WhiteBackground>\n        <HeaderContents>\n          <Logo>\n            <a href=\"/\">\n              <img src={logoImg} alt=\"\" style={LogoStyle} />\n            </a>\n          </Logo>\n          <Spacer />\n          {children}\n        </HeaderContents>\n      </WhiteBackground>\n      <GradientBorder />\n    </Positioner>\n  );\n};\n\nexport default Header;\n",["290","291"],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingText.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingError.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingGender.js",["292"],"import React from 'react';\nimport styled from 'styled-components';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    box-sizing : border-box;\n    border: 1px solid #707070;\n    outline: none;\n    border-radius: 0px;\n    line-height: 2.5rem;\n    font-size: 1.2rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n`;\n\n\nconst SettingGender = ({label, ...rest}) => (\n    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Select {...rest} style={{fontSize: '1.2rem'}}>\n          <MenuItem value={'Male'}>Male</MenuItem>\n          <MenuItem value={'Female'}>Female</MenuItem>\n        </Select>\n    </Wrapper>\n\n    \n);\n\nexport default SettingGender;\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingDate.js",["293","294"],"import React from 'react';\nimport '../Date/react-datetime.css';\nimport Datetime from \"react-datetime\";\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;    \n`;\n\nconst Label = styled.div`\n    font-size: 1rem;\n    color: #5F5F5F;\n    margin-bottom: 0.25rem;\n`;\n\nconst renderInput = ((props) => {\n    function clear() {\n      props.onChange({ target: { name: 'birthDate', value: '' } });\n    }\n    return (\n      <div>\n        <input {...props} style={{\n            width: '50%',\n            fontSize: '1.2rem',\n            boxSizing: 'border-box',\n            paddingTop: '0.5rem',\n            paddingBottom: '0.5rem',\n            paddingLeft: '0.5rem',\n            paddingRight: '0.5rem',\n            border: '1px solid #707070',\n            outline: 'none',\n            borderRadius: '0px',\n        }}/>\n      </div>\n    );\n});\n\nconst Settingdate = ({label, ...rest}) => (    \n    <Wrapper>\n        <Label>{label}</Label>\n        <Datetime {...rest} renderInput={renderInput}/>\n    </Wrapper>    \n);\n\nexport default Settingdate;\n\n\n","/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingButton.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/InputWithLabel.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingContent.js",[],"/Users/hanhyeseon/Glokool_WEB/GlokoolWeb/src/components/Setting/SettingWrapper.js",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":14},{"ruleId":"299","severity":1,"message":"303","line":3,"column":16,"nodeType":"301","messageId":"302","endLine":3,"endColumn":25},{"ruleId":"299","severity":1,"message":"304","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":15},{"ruleId":"299","severity":1,"message":"305","line":4,"column":10,"nodeType":"301","messageId":"302","endLine":4,"endColumn":15},{"ruleId":"299","severity":1,"message":"306","line":4,"column":17,"nodeType":"301","messageId":"302","endLine":4,"endColumn":22},{"ruleId":"299","severity":1,"message":"307","line":6,"column":10,"nodeType":"301","messageId":"302","endLine":6,"endColumn":17},{"ruleId":"299","severity":1,"message":"308","line":9,"column":7,"nodeType":"301","messageId":"302","endLine":9,"endColumn":22},{"ruleId":"299","severity":1,"message":"309","line":60,"column":9,"nodeType":"301","messageId":"302","endLine":60,"endColumn":16},{"ruleId":"299","severity":1,"message":"310","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":26},{"ruleId":"299","severity":1,"message":"311","line":1,"column":28,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"312","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"313","line":12,"column":3,"nodeType":"301","messageId":"302","endLine":12,"endColumn":17},{"ruleId":"299","severity":1,"message":"314","line":14,"column":3,"nodeType":"301","messageId":"302","endLine":14,"endColumn":14},{"ruleId":"299","severity":1,"message":"315","line":15,"column":3,"nodeType":"301","messageId":"302","endLine":15,"endColumn":16},{"ruleId":"299","severity":1,"message":"316","line":16,"column":3,"nodeType":"301","messageId":"302","endLine":16,"endColumn":15},{"ruleId":"299","severity":1,"message":"317","line":47,"column":10,"nodeType":"301","messageId":"302","endLine":47,"endColumn":14},{"ruleId":"299","severity":1,"message":"318","line":52,"column":9,"nodeType":"301","messageId":"302","endLine":52,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":56,"column":19,"nodeType":"321","endLine":74,"endColumn":4},{"ruleId":"322","severity":1,"message":"323","line":57,"column":23,"nodeType":"324","messageId":"325","endLine":57,"endColumn":25},{"ruleId":"299","severity":1,"message":"326","line":66,"column":11,"nodeType":"301","messageId":"302","endLine":66,"endColumn":21},{"ruleId":"319","severity":1,"message":"327","line":74,"column":6,"nodeType":"328","endLine":74,"endColumn":8,"suggestions":"329"},{"ruleId":"299","severity":1,"message":"330","line":96,"column":13,"nodeType":"301","messageId":"302","endLine":96,"endColumn":21},{"ruleId":"331","severity":1,"message":"332","line":98,"column":9,"nodeType":"333","messageId":"334","endLine":105,"endColumn":10},{"ruleId":"331","severity":1,"message":"332","line":108,"column":9,"nodeType":"333","messageId":"334","endLine":117,"endColumn":10},{"ruleId":"299","severity":1,"message":"335","line":137,"column":9,"nodeType":"301","messageId":"302","endLine":137,"endColumn":21},{"ruleId":"336","severity":1,"message":"337","line":176,"column":13,"nodeType":"338","endLine":176,"endColumn":81},{"ruleId":"299","severity":1,"message":"339","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":28},{"ruleId":"299","severity":1,"message":"340","line":1,"column":30,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"341","line":2,"column":22,"nodeType":"301","messageId":"302","endLine":2,"endColumn":30},{"ruleId":"322","severity":1,"message":"323","line":78,"column":15,"nodeType":"324","messageId":"325","endLine":78,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":92,"column":28,"nodeType":"324","messageId":"325","endLine":92,"endColumn":30},{"ruleId":"319","severity":1,"message":"342","line":106,"column":6,"nodeType":"328","endLine":106,"endColumn":8,"suggestions":"343"},{"ruleId":"322","severity":1,"message":"323","line":109,"column":14,"nodeType":"324","messageId":"325","endLine":109,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":174,"column":9,"nodeType":"333","messageId":"334","endLine":181,"endColumn":10},{"ruleId":"331","severity":1,"message":"332","line":184,"column":9,"nodeType":"333","messageId":"334","endLine":193,"endColumn":10},{"ruleId":"299","severity":1,"message":"344","line":272,"column":9,"nodeType":"301","messageId":"302","endLine":272,"endColumn":15},{"ruleId":"322","severity":1,"message":"323","line":398,"column":37,"nodeType":"324","messageId":"325","endLine":398,"endColumn":39},{"ruleId":"299","severity":1,"message":"345","line":15,"column":45,"nodeType":"301","messageId":"302","endLine":15,"endColumn":51},{"ruleId":"299","severity":1,"message":"335","line":18,"column":7,"nodeType":"301","messageId":"302","endLine":18,"endColumn":19},{"ruleId":"299","severity":1,"message":"346","line":37,"column":7,"nodeType":"301","messageId":"302","endLine":37,"endColumn":14},{"ruleId":"299","severity":1,"message":"347","line":130,"column":11,"nodeType":"301","messageId":"302","endLine":130,"endColumn":21},{"ruleId":"299","severity":1,"message":"348","line":134,"column":19,"nodeType":"301","messageId":"302","endLine":134,"endColumn":30},{"ruleId":"299","severity":1,"message":"349","line":134,"column":39,"nodeType":"301","messageId":"302","endLine":134,"endColumn":46},{"ruleId":"322","severity":1,"message":"323","line":175,"column":23,"nodeType":"324","messageId":"325","endLine":175,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":177,"column":30,"nodeType":"324","messageId":"325","endLine":177,"endColumn":32},{"ruleId":"299","severity":1,"message":"350","line":193,"column":7,"nodeType":"301","messageId":"302","endLine":193,"endColumn":13},{"ruleId":"299","severity":1,"message":"351","line":38,"column":23,"nodeType":"301","messageId":"302","endLine":38,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":46,"column":46,"nodeType":"324","messageId":"325","endLine":46,"endColumn":48},{"ruleId":"299","severity":1,"message":"352","line":56,"column":21,"nodeType":"301","messageId":"302","endLine":56,"endColumn":33},{"ruleId":"322","severity":1,"message":"323","line":60,"column":30,"nodeType":"324","messageId":"325","endLine":60,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":63,"column":36,"nodeType":"324","messageId":"325","endLine":63,"endColumn":38},{"ruleId":"322","severity":1,"message":"323","line":66,"column":36,"nodeType":"324","messageId":"325","endLine":66,"endColumn":38},{"ruleId":"322","severity":1,"message":"323","line":69,"column":36,"nodeType":"324","messageId":"325","endLine":69,"endColumn":38},{"ruleId":"299","severity":1,"message":"353","line":8,"column":7,"nodeType":"301","messageId":"302","endLine":8,"endColumn":11},{"ruleId":"299","severity":1,"message":"354","line":16,"column":7,"nodeType":"301","messageId":"302","endLine":16,"endColumn":12},{"ruleId":"299","severity":1,"message":"355","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"356","line":18,"column":14,"nodeType":"301","messageId":"302","endLine":18,"endColumn":19},{"ruleId":"299","severity":1,"message":"300","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"357","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":16},{"ruleId":"295","replacedBy":"358"},{"ruleId":"297","replacedBy":"359"},{"ruleId":"299","severity":1,"message":"354","line":16,"column":7,"nodeType":"301","messageId":"302","endLine":16,"endColumn":12},{"ruleId":"299","severity":1,"message":"355","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"356","line":18,"column":14,"nodeType":"301","messageId":"302","endLine":18,"endColumn":19},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'firestore' is defined but never used.","'Route' is defined but never used.","'white' is defined but never used.","'green' is defined but never used.","'SvgIcon' is defined but never used.","'BootstrapButton' is assigned a value but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'InputWithLabel' is defined but never used.","'SettingDate' is defined but never used.","'SettingGender' is defined but never used.","'SettingError' is defined but never used.","'test' is assigned a value but never used.","'DATA' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'profileRef' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'user.displayName', 'user.email', 'user.photoURL', and 'user.uid'. Either include them or remove the dependency array.","ArrayExpression",["362"],"'progress' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'userDocument' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'useRef' is defined but never used.","'useTheme' is defined but never used.","React Hook React.useEffect has missing dependencies: 'history' and 'user.emailVerified'. Either include them or remove the dependency array.",["363"],"'getUrl' is assigned a value but never used.","'toDate' is defined but never used.","'profile' is assigned a value but never used.","'validation' is assigned a value but never used.","'AuthActions' is assigned a value but never used.","'history' is assigned a value but never used.","'gender' is assigned a value but never used.","'error' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'user' is assigned a value but never used.","'Input' is assigned a value but never used.","'moment' is defined but never used.","'clear' is defined but never used.","'shadow' is defined but never used.",["360"],["361"],"no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [user.displayName, user.email, user.photoURL, user.uid]",{"range":"368","text":"369"},"Update the dependencies array to be: [history, user.emailVerified]",{"range":"370","text":"371"},[2121,2123],"[user.displayName, user.email, user.photoURL, user.uid]",[3241,3243],"[history, user.emailVerified]"]