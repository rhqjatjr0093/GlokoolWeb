[{"C:\\Work\\GlokoolWeb\\src\\App.js":"1","C:\\Work\\GlokoolWeb\\src\\reportWebVitals.js":"2","C:\\Work\\GlokoolWeb\\src\\Firebase.js":"3","C:\\Work\\GlokoolWeb\\src\\index.js":"4","C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\index.js":"5","C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\Header.js":"6","C:\\Work\\GlokoolWeb\\src\\lib\\styleUtil.js":"7","C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\LoginButton.js":"8","C:\\Work\\GlokoolWeb\\src\\components\\Base\\HeaderContainer.js":"9","C:\\Work\\GlokoolWeb\\src\\pages\\index.js":"10","C:\\Work\\GlokoolWeb\\src\\pages\\Auth.js":"11","C:\\Work\\GlokoolWeb\\src\\pages\\Home.js":"12","C:\\Work\\GlokoolWeb\\src\\Root.js":"13","C:\\Work\\GlokoolWeb\\src\\redux\\modules\\index.js":"14","C:\\Work\\GlokoolWeb\\src\\redux\\modules\\base.js":"15","C:\\Work\\GlokoolWeb\\src\\redux\\configureStore.js":"16","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthWrapper.js":"17","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthContent.js":"18","C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Login.js":"19","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\InputWithLabel.js":"20","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthButton.js":"21","C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\SignUpButton.js":"22","C:\\Work\\GlokoolWeb\\src\\redux\\modules\\Auth.js":"23","C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Register.js":"24","C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\index.js":"25","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\index.js":"26","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthDate.js":"27","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthGender.js":"28","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthError.js":"29","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthText.js":"30","C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Email.js":"31","C:\\Work\\GlokoolWeb\\src\\pages\\Main.js":"32","C:\\Work\\GlokoolWeb\\src\\components\\Base\\LoginHeaderContainer.js":"33","C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\LogoutButton.js":"34","C:\\Work\\GlokoolWeb\\src\\containers\\Main\\index.js":"35","C:\\Work\\GlokoolWeb\\src\\containers\\Main\\Chat.js":"36","C:\\Work\\GlokoolWeb\\src\\components\\Chat\\index.js":"37","C:\\Work\\GlokoolWeb\\src\\components\\Main\\PersistenceDrawerLeft.js":"38","C:\\Work\\GlokoolWeb\\src\\components\\Chat\\ChatRoom.js":"39","C:\\Work\\GlokoolWeb\\src\\redux\\modules\\Main.js":"40"},{"size":2059,"mtime":1611639469827,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1611534076400,"results":"43","hashOfConfig":"42"},{"size":881,"mtime":1611560953411,"results":"44","hashOfConfig":"42"},{"size":347,"mtime":1611538592838,"results":"45","hashOfConfig":"42"},{"size":210,"mtime":1611632040379,"results":"46","hashOfConfig":"42"},{"size":1569,"mtime":1611729920530,"results":"47","hashOfConfig":"42"},{"size":1322,"mtime":1611557599686,"results":"48","hashOfConfig":"42"},{"size":817,"mtime":1611540925209,"results":"49","hashOfConfig":"42"},{"size":605,"mtime":1611540432788,"results":"50","hashOfConfig":"42"},{"size":126,"mtime":1611626313415,"results":"51","hashOfConfig":"42"},{"size":1147,"mtime":1611624569029,"results":"52","hashOfConfig":"42"},{"size":721,"mtime":1611639994091,"results":"53","hashOfConfig":"42"},{"size":397,"mtime":1611537798631,"results":"54","hashOfConfig":"42"},{"size":272,"mtime":1611722742929,"results":"55","hashOfConfig":"42"},{"size":842,"mtime":1611627338005,"results":"56","hashOfConfig":"42"},{"size":649,"mtime":1611557123847,"results":"57","hashOfConfig":"42"},{"size":1206,"mtime":1611539152768,"results":"58","hashOfConfig":"42"},{"size":349,"mtime":1611539299276,"results":"59","hashOfConfig":"42"},{"size":3584,"mtime":1611638968261,"results":"60","hashOfConfig":"42"},{"size":895,"mtime":1611541362676,"results":"61","hashOfConfig":"42"},{"size":726,"mtime":1611541009738,"results":"62","hashOfConfig":"42"},{"size":839,"mtime":1611540523495,"results":"63","hashOfConfig":"42"},{"size":1409,"mtime":1611562215547,"results":"64","hashOfConfig":"42"},{"size":7838,"mtime":1611630334655,"results":"65","hashOfConfig":"42"},{"size":139,"mtime":1611624555672,"results":"66","hashOfConfig":"42"},{"size":440,"mtime":1611624526547,"results":"67","hashOfConfig":"42"},{"size":1122,"mtime":1611555036786,"results":"68","hashOfConfig":"42"},{"size":918,"mtime":1611556893956,"results":"69","hashOfConfig":"42"},{"size":482,"mtime":1611557651602,"results":"70","hashOfConfig":"42"},{"size":607,"mtime":1611624475441,"results":"71","hashOfConfig":"42"},{"size":2195,"mtime":1611625542082,"results":"72","hashOfConfig":"42"},{"size":822,"mtime":1611729402364,"results":"73","hashOfConfig":"42"},{"size":497,"mtime":1611638141340,"results":"74","hashOfConfig":"42"},{"size":931,"mtime":1611636541272,"results":"75","hashOfConfig":"42"},{"size":30,"mtime":1611729305400,"results":"76","hashOfConfig":"42"},{"size":5343,"mtime":1611734008265,"results":"77","hashOfConfig":"42"},{"size":55,"mtime":1611715212143,"results":"78","hashOfConfig":"42"},{"size":6762,"mtime":1611709809765,"results":"79","hashOfConfig":"42"},{"size":1885,"mtime":1611728809144,"results":"80","hashOfConfig":"42"},{"size":207,"mtime":1611722888137,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"11x0r05",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},"C:\\Work\\GlokoolWeb\\src\\App.js",[],["172","173"],"C:\\Work\\GlokoolWeb\\src\\reportWebVitals.js",[],"C:\\Work\\GlokoolWeb\\src\\Firebase.js",[],"C:\\Work\\GlokoolWeb\\src\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\Header.js",["174"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { shadow, media } from '../../../lib/styleUtil';\r\n\r\n\r\n\r\n// 상단 고정, 그림자\r\nconst Positioner = styled.div`\r\n    flex-direction: column;\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index: 1000;\r\n`;\r\n\r\n// 흰 배경, 내용 중간 정렬\r\nconst WhiteBackground = styled.div`\r\n    background: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    height: auto;\r\n`;\r\n\r\n// 해더의 내용\r\nconst HeaderContents = styled.div`\r\n    width: 1200px;\r\n    height: 65px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    ${media.wide`\r\n        width: 992px;\r\n    `}\r\n\r\n    ${media.tablet`\r\n        width: 100%;\r\n    `}\r\n`;\r\n\r\n// 로고\r\nconst Logo = styled.div`\r\n    font-size: x-large;\r\n    color: #FFC043;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n`;\r\n\r\n// 중간 여백\r\nconst Spacer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n\r\n// 하단 그래디언트 테두리\r\nconst GradientBorder = styled.div`\r\n    height: 3px;\r\n    background: #707070;\r\n`;\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <Positioner>\r\n            <WhiteBackground>\r\n                <HeaderContents>\r\n                    <Logo>GLOKOOL</Logo>\r\n                    <Spacer/>\r\n                    {children}\r\n                </HeaderContents>\r\n            </WhiteBackground>\r\n            <GradientBorder/>\r\n        </Positioner>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Work\\GlokoolWeb\\src\\lib\\styleUtil.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\LoginButton.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\HeaderContainer.js",[],"C:\\Work\\GlokoolWeb\\src\\pages\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\pages\\Auth.js",[],"C:\\Work\\GlokoolWeb\\src\\pages\\Home.js",["175"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport HeaderContainer from '../components/Base/HeaderContainer'\r\nimport * as baseActions from '../redux/modules/base';\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <HeaderContainer/>\r\n                </div>                                        \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch)\r\n    })\r\n)(Home);","C:\\Work\\GlokoolWeb\\src\\Root.js",[],"C:\\Work\\GlokoolWeb\\src\\redux\\modules\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\redux\\modules\\base.js",[],"C:\\Work\\GlokoolWeb\\src\\redux\\configureStore.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthWrapper.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthContent.js",[],"C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Login.js",["176","177","178","179","180","181"],"import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, AuthError } from '../../components/Auth';\r\nimport { auth } from '../../Firebase';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as authActions from '../../redux/modules/Auth';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    componentDidMount() {\r\n        if(auth().currentUser != null){\r\n            console.log(auth().currentUser);\r\n            this.props.history.push('/main');\r\n        }\r\n    }\r\n\r\n    setError = (message) => {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.setError({\r\n            form: 'login',\r\n            message\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n\r\n    handleLogin = () => {\r\n        const { form, error } = this.props;\r\n        const { email, password } = form.toJS();\r\n        \r\n        auth().setPersistence(auth.Auth.Persistence.LOCAL);\r\n\r\n        auth().signInWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n                console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n\r\n                console.log(errorCode);\r\n                \r\n                if(errorCode == 'auth/invalid-email'){\r\n                    this.setError('올바르지 않은 이메일 형식입니다');\r\n                }\r\n                else if (errorCode == 'auth/user-disabled'){\r\n                    this.setError('정지된 회원입니다');\r\n                }\r\n                else if (errorCode == 'auth/user-not-found'){\r\n                    this.setError('없는 회원입니다. 이메일을 확인해주세요');\r\n                }\r\n                else if (errorCode == 'auth/wrong-password'){\r\n                    this.setError('비밀번호가 틀렸습니다');\r\n                }\r\n                else{\r\n                    this.setError(errorCode);\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.props;\r\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\r\n        const { handleChange, handleLogin } = this;\r\n\r\n        return (\r\n            <AuthContent title=\"로그인\">\r\n                <InputWithLabel \r\n                    label=\"이메일\" \r\n                    name=\"email\" \r\n                    placeholder=\"이메일\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={() => handleLogin()}>로그인</AuthButton>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form']),\r\n        error: state.auth.getIn(['login', 'error']),\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch)\r\n    })\r\n)(Login);","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\InputWithLabel.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthButton.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\SignUpButton.js",[],"C:\\Work\\GlokoolWeb\\src\\redux\\modules\\Auth.js",[],"C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Register.js",["182","183","184","185","186","187","188","189"],"import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, AuthDate, AuthGender, AuthError } from '../../components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport { auth, firestore } from '../../Firebase'\r\nimport * as authActions from '../../redux/modules/Auth';\r\nimport moment from 'moment';\r\nimport {isEmail, isLength, isAlphanumeric, toDate} from 'validator';\r\n\r\nclass Register extends Component {\r\n\r\n    componentDidMount() {\r\n        if(auth().currentUser != null){\r\n            console.log(auth().currentUser);\r\n            this.props.history.push('/main');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //화면을 이동할때 실행 \r\n        //입력값 초기화 실행\r\n\r\n        this.handleChange({target: {name : 'email', value: ''}});\r\n        this.handleChange({target: {name : 'password', value: ''}});\r\n        this.handleChange({target: {name : 'passwordConfirm', value: ''}});\r\n        this.handleChange({target: {name : 'birthDate', value: ''}});\r\n        this.handleChange({target: {name : 'gender', value: 'Male'}});\r\n    }\r\n    \r\n\r\n    setError = (message) => {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.setError({\r\n            form: 'register',\r\n            message\r\n        });\r\n    }\r\n\r\n    validate = {\r\n        email: (value) => {\r\n            if(!isEmail(value)) {\r\n                this.setError('잘못된 이메일 형식 입니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        username: (value) => {\r\n            if(!isAlphanumeric(value) || !isLength(value, { min:4, max: 15 })) {\r\n                this.setError('아이디는 4~15 글자의 알파벳 혹은 숫자로 이뤄져야 합니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        password: (value) => {\r\n            if(!isLength(value, { min: 8 })) {\r\n                this.setError('비밀번호를 8자 이상 입력하세요.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        },\r\n        passwordConfirm: (value) => {\r\n            if(this.props.form.get('password') !== value) {\r\n                this.setError('입력한 비밀번호와 일치하지 않습니다.');\r\n                return false;\r\n            }\r\n            this.setError(null); \r\n            return true;\r\n        },\r\n        birthDate: (value) => {\r\n            return true;\r\n        },\r\n        gender: (value) => {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        \r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'register'\r\n        });\r\n\r\n        const validation = this.validate[name](value);\r\n    }\r\n\r\n    handleLocalRegister = async () => {\r\n\r\n        const { form, AuthActions, error, history } = this.props;\r\n        const { email, username, password, passwordConfirm, birthDate, gender } = form.toJS();\r\n\r\n        const { validate } = this;\r\n\r\n        if(error) return;\r\n        if(!validate['email'](email) \r\n            || !validate['username'](username) \r\n            || !validate['password'](password) \r\n            || !validate['passwordConfirm'](passwordConfirm)\r\n            || !validate['birthDate'](birthDate)\r\n            ) { \r\n            return;\r\n        }\r\n\r\n        this.setError(null);\r\n\r\n        await auth().createUserWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n                var uid = user.user.uid;\r\n               \r\n                var userDoc = firestore().collection('Guides').doc(uid)\r\n                    .set({\r\n                        name: username,\r\n                        email: email,\r\n                        birthDate: birthDate,\r\n                        gender: gender,\r\n                        signupDate: new Date(),\r\n                    })\r\n                    .then(doc => {\r\n                        console.log('프로필 업데이트 완료');\r\n                        this.props.history.push('/auth/email');\r\n                    })\r\n                    .catch(error => {\r\n                        this.setError('가입중 오류가 발생했습니다. 다시 시도해주세요'); \r\n                        auth().currentUser.delete();\r\n                        console.log('프로필 업데이트 실패 기존 가입 계정 삭제')\r\n                    })\r\n                \r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n\r\n                if(errorCode == 'auth/email-already-in-use'){\r\n                    this.setError('이미 사용중인 이메일입니다.');\r\n                }\r\n                else if (errorCode == 'auth/weak-password') {\r\n                    this.setError('비밀번호가 너무 약합니다');\r\n                }\r\n                else{\r\n                    this.setError(errorCode);\r\n                }\r\n            })\r\n        \r\n    }    \r\n\r\n\r\n\r\n    render() {\r\n        const { error } = this.props;\r\n        const { email, username, password, passwordConfirm, birthDate, gender } = this.props.form.toJS();\r\n        const { handleChange, handleLocalRegister} = this;\r\n\r\n        return (\r\n            <AuthContent title=\"회원가입\">\r\n                <InputWithLabel \r\n                    label=\"이메일\"\r\n                    name=\"email\"\r\n                    placeholder=\"이메일\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"닉네임\" \r\n                    name=\"username\" \r\n                    placeholder=\"가이드 명으로 표시됩니다\" \r\n                    value={username} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호 확인\" \r\n                    name=\"passwordConfirm\" \r\n                    placeholder=\"비밀번호 확인\" \r\n                    type=\"password\" \r\n                    value={passwordConfirm}\r\n                    onChange={handleChange}\r\n                />\r\n                <AuthDate\r\n                    label='생년월일'\r\n                    value={birthDate}\r\n                    dateFormat=\"YYYY-MM-DD\"\r\n                    timeFormat={false}\r\n                    closeOnSelect={true}\r\n                    onChange={date => handleChange({ target: { name: 'birthDate', value: moment(date).format('X')} })}\r\n                />\r\n                <AuthGender\r\n                    label='성별'\r\n                    value={'Male'}\r\n                    onChange={gender => handleChange({target: { name: 'gender', value: gender.target.value}})}\r\n                />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={handleLocalRegister}>회원가입</AuthButton>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register', 'form']),\r\n        error: state.auth.getIn(['register', 'error']),\r\n        exists: state.auth.getIn(['register', 'exists'])\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch)\r\n    })\r\n)(Register);","C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthDate.js",["190","191"],"import '../Date/react-datetime.css';\r\nimport Datetime from \"react-datetime\";\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;    \r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    color: #5F5F5F;\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst renderInput = ((props) => {\r\n    function clear() {\r\n      props.onChange({ target: { name: 'birthDate', value: '' } });\r\n    }\r\n    return (\r\n      <div>\r\n        <input {...props} style={{\r\n            width: '50%',\r\n            fontSize: '1.2rem',\r\n            boxSizing: 'border-box',\r\n            paddingTop: '0.5rem',\r\n            paddingBottom: '0.5rem',\r\n            paddingLeft: '0.5rem',\r\n            paddingRight: '0.5rem',\r\n            border: '1px solid #707070',\r\n            outline: 'none',\r\n            borderRadius: '0px',\r\n        }}/>\r\n      </div>\r\n    );\r\n  })\r\n\r\nconst Authdate = ({label, ...rest}) => (\r\n    \r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n        <Datetime {...rest} renderInput={renderInput}/>\r\n    </Wrapper>\r\n\r\n    \r\n);\r\n\r\nexport default Authdate;\r\n\r\n\r\n","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthGender.js",["192"],"import styled from 'styled-components';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;    \r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    color: #5F5F5F;\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    box-sizing : border-box;\r\n    border: 1px solid #707070;\r\n    outline: none;\r\n    border-radius: 0px;\r\n    line-height: 2.5rem;\r\n    font-size: 1.2rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\n\r\nconst AuthGender = ({label, ...rest}) => (\r\n    \r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n        <Select {...rest} style={{fontSize: '1.2rem'}}>\r\n          <MenuItem value={'Male'}>Male</MenuItem>\r\n          <MenuItem value={'Female'}>Female</MenuItem>\r\n        </Select>\r\n    </Wrapper>\r\n\r\n    \r\n);\r\n\r\nexport default AuthGender;\r\n\r\n","C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthError.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Auth\\AuthText.js",[],"C:\\Work\\GlokoolWeb\\src\\containers\\Auth\\Email.js",[],"C:\\Work\\GlokoolWeb\\src\\pages\\Main.js",["193","194"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from '../redux/modules/base';\r\nimport LoginHeaderContainer from '../components/Base/LoginHeaderContainer';\r\nimport Chat from '../containers/Main/Chat';\r\nimport { ChatRoomLeft } from '../components/Chat'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div className={{display : 'flex'}}>\r\n                <LoginHeaderContainer/>\r\n                <Chat/>                  \r\n            </div>\r\n            \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch)\r\n    })\r\n)(Main);","C:\\Work\\GlokoolWeb\\src\\components\\Base\\LoginHeaderContainer.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Base\\Header\\LogoutButton.js",[],"C:\\Work\\GlokoolWeb\\src\\containers\\Main\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\containers\\Main\\Chat.js",["195","196","197","198"],"C:\\Work\\GlokoolWeb\\src\\components\\Chat\\index.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Main\\PersistenceDrawerLeft.js",[],"C:\\Work\\GlokoolWeb\\src\\components\\Chat\\ChatRoom.js",["199"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Avatar, ListItemAvatar, Toolbar } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  avatar: {\r\n    width: 52,\r\n    height: 52,\r\n    borderRadius: 100,\r\n  },\r\n}));\r\n\r\n\r\nconst chatRoom = [1,2,3,4,5];\r\n\r\nexport default function ChatRoomLeft () {\r\n    const classes = useStyles();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    return(\r\n      <div>\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <Toolbar/>\r\n            <div className={classes.drawerContainer}>\r\n            \r\n            <List \r\n              button            \r\n              selected\r\n            >\r\n              {chatRoom.map((key) => (\r\n                <ListItem key={key} button selected={selectedIndex === key} onClick={() => setSelectedIndex(key)}>                      \r\n                  <ListItemAvatar>\r\n                    <Avatar src='../../assets/profile.jpg'/>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary='장충단 길' secondary='고객명'/>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            </div>            \r\n        </Drawer>\r\n      </div>\r\n        \r\n        \r\n        \r\n    );    \r\n};","C:\\Work\\GlokoolWeb\\src\\redux\\modules\\Main.js",["200"],"import { createAction, handleActions } from 'redux-actions';\r\nimport { Map } from 'immutable';\r\n\r\nconst initialState = Map({\r\n    chatRoom: Map([])\r\n});\r\n\r\nexport default handleActions({\r\n\r\n}, initialState);",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"209","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"210","line":38,"column":23,"nodeType":"207","messageId":"208","endLine":38,"endColumn":28},{"ruleId":"205","severity":1,"message":"211","line":49,"column":21,"nodeType":"207","messageId":"208","endLine":49,"endColumn":33},{"ruleId":"212","severity":1,"message":"213","line":53,"column":30,"nodeType":"214","messageId":"215","endLine":53,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":56,"column":36,"nodeType":"214","messageId":"215","endLine":56,"endColumn":38},{"ruleId":"212","severity":1,"message":"213","line":59,"column":36,"nodeType":"214","messageId":"215","endLine":59,"endColumn":38},{"ruleId":"212","severity":1,"message":"213","line":62,"column":36,"nodeType":"214","messageId":"215","endLine":62,"endColumn":38},{"ruleId":"205","severity":1,"message":"216","line":8,"column":44,"nodeType":"207","messageId":"208","endLine":8,"endColumn":50},{"ruleId":"205","severity":1,"message":"217","line":92,"column":15,"nodeType":"207","messageId":"208","endLine":92,"endColumn":25},{"ruleId":"205","severity":1,"message":"218","line":97,"column":23,"nodeType":"207","messageId":"208","endLine":97,"endColumn":34},{"ruleId":"205","severity":1,"message":"219","line":97,"column":43,"nodeType":"207","messageId":"208","endLine":97,"endColumn":50},{"ruleId":"205","severity":1,"message":"220","line":118,"column":21,"nodeType":"207","messageId":"208","endLine":118,"endColumn":28},{"ruleId":"212","severity":1,"message":"213","line":140,"column":30,"nodeType":"214","messageId":"215","endLine":140,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":143,"column":36,"nodeType":"214","messageId":"215","endLine":143,"endColumn":38},{"ruleId":"205","severity":1,"message":"221","line":157,"column":72,"nodeType":"207","messageId":"208","endLine":157,"endColumn":78},{"ruleId":"205","severity":1,"message":"222","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":14},{"ruleId":"205","severity":1,"message":"223","line":17,"column":14,"nodeType":"207","messageId":"208","endLine":17,"endColumn":19},{"ruleId":"205","severity":1,"message":"224","line":15,"column":7,"nodeType":"207","messageId":"208","endLine":15,"endColumn":12},{"ruleId":"205","severity":1,"message":"209","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"225","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":22},{"ruleId":"205","severity":1,"message":"226","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":28},{"ruleId":"205","severity":1,"message":"227","line":1,"column":30,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"228","line":2,"column":22,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":52,"column":4,"nodeType":"231","endLine":52,"endColumn":6,"suggestions":"232"},{"ruleId":"205","severity":1,"message":"228","line":2,"column":22,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"205","severity":1,"message":"233","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":22},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'shadow' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'error' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'toDate' is defined but never used.","'validation' is assigned a value but never used.","'AuthActions' is assigned a value but never used.","'history' is assigned a value but never used.","'userDoc' is assigned a value but never used.","'gender' is assigned a value but never used.","'moment' is defined but never used.","'clear' is defined but never used.","'Input' is assigned a value but never used.","'ChatRoomLeft' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'useTheme' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'ChatDB'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'createAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},"Update the dependencies array to be: [ChatDB]",{"range":"239","text":"240"},[1864,1866],"[ChatDB]"]